{"ast":null,"code":"var _jsxFileName = \"D:\\\\quizzassignment\\\\src\\\\components\\\\QuizApp.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { LoaderIcon, RotateIcon, TrophyIcon, ClockIcon, StarIcon, SettingsIcon } from \"./Icons\";\nimport { Card, CardHeader, CardContent, CardTitle, Button, Progress, Badge, Select, SelectItem } from \"./Ui-components\";\nimport { FaTrophy } from \"react-icons/fa6\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\n  try {\n    let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`;\n    if (difficulty && difficulty !== \"mixed\") {\n      url += `&difficulty=${difficulty}`;\n    }\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (!data.results || data.results.length === 0) {\n      throw new Error(\"No questions received from API\");\n    }\n    return data.results.map((item, index) => {\n      try {\n        // Decode URL-encoded strings with better error handling\n        const question = decodeURIComponent(item.question);\n        const correctAnswer = decodeURIComponent(item.correct_answer);\n        const incorrectAnswers = item.incorrect_answers.map(ans => decodeURIComponent(ans));\n\n        // Randomize answer positions\n        const allAnswers = [...incorrectAnswers, correctAnswer];\n        const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5);\n        const correctIndex = shuffledAnswers.indexOf(correctAnswer);\n        return {\n          id: `trivia-${Date.now()}-${index}`,\n          question,\n          options: shuffledAnswers,\n          correctAnswer: correctIndex,\n          difficulty: item.difficulty,\n          category: decodeURIComponent(item.category)\n        };\n      } catch (decodeError) {\n        console.error(\"Error decoding question:\", decodeError);\n        throw new Error(\"Failed to process question data\");\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching trivia questions:\", error);\n    throw error;\n  }\n}\nconst getHighScores = () => {\n  if (typeof window === \"undefined\") return [];\n  const scores = localStorage.getItem(\"quiz-high-scores\");\n  return scores ? JSON.parse(scores) : [];\n};\nconst saveHighScore = score => {\n  if (typeof window === \"undefined\") return;\n  const scores = getHighScores();\n  scores.push(score);\n  scores.sort((a, b) => b.percentage - a.percentage);\n  const topScores = scores.slice(0, 10); // Keep top 10 scores\n  localStorage.setItem(\"quiz-high-scores\", JSON.stringify(topScores));\n};\nexport function QuizApp({\n  onBack\n}) {\n  _s();\n  const [quizState, setQuizState] = useState({\n    questions: [],\n    currentQuestionIndex: 0,\n    selectedAnswers: [],\n    isComplete: false,\n    score: 0,\n    isLoading: true,\n    error: null,\n    timeLeft: 30,\n    timerEnabled: false,\n    difficulty: \"mixed\"\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [highScores, setHighScores] = useState([]);\n\n  // for timer in each question\n  useEffect(() => {\n    let interval;\n\n    // \n    if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\n      interval = setInterval(() => {\n        setQuizState(prev => {\n          // if question times is up\n          if (prev.timeLeft <= 1) {\n            // maybe it was not the last question\n            if (prev.currentQuestionIndex < prev.questions.length - 1) {\n              return {\n                ...prev,\n                currentQuestionIndex: prev.currentQuestionIndex + 1,\n                timeLeft: 30\n              };\n            } else {\n              // Finish quiz bcoz it is a last question\n              const score = prev.selectedAnswers.reduce((total, answer, index) => {\n                var _prev$questions$index;\n                if (answer === ((_prev$questions$index = prev.questions[index]) === null || _prev$questions$index === void 0 ? void 0 : _prev$questions$index.correctAnswer)) {\n                  return total + 1;\n                }\n                return total;\n              }, 0);\n              return {\n                ...prev,\n                isComplete: true,\n                score,\n                timeLeft: 0\n              };\n            }\n          }\n          return {\n            ...prev,\n            timeLeft: prev.timeLeft - 1\n          };\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [quizState.timerEnabled, quizState.timeLeft, quizState.isComplete, quizState.isLoading, quizState.currentQuestionIndex]);\n  useEffect(() => {\n    setHighScores(getHighScores());\n  }, []);\n\n  // Load questions on component mount\n  useEffect(() => {\n    if (!showSettings) {\n      loadQuestions();\n    }\n  }, [showSettings, quizState.difficulty]);\n  const loadQuestions = async () => {\n    setQuizState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      // Always try API first with enhanced error handling\n      const questions = await fetchTriviaQuestions(8,\n      // Load 8 questions as requested (5-10 range)\n      quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty);\n      if (questions.length === 0) {\n        throw new Error(\"No questions received\");\n      }\n      setQuizState(prev => ({\n        ...prev,\n        questions,\n        selectedAnswers: new Array(questions.length).fill(null),\n        isLoading: false,\n        currentQuestionIndex: 0,\n        timeLeft: 30,\n        isComplete: false,\n        score: 0\n      }));\n    } catch (error) {\n      console.error(\"Failed to load questions from API:\", error);\n\n      // Enhanced fallback with user notification\n    }\n  };\n  const selectAnswer = answerIndex => {\n    if (quizState.isComplete) return;\n    const newSelectedAnswers = [...quizState.selectedAnswers];\n    newSelectedAnswers[quizState.currentQuestionIndex] = answerIndex;\n    setQuizState(prev => ({\n      ...prev,\n      selectedAnswers: newSelectedAnswers\n    }));\n  };\n  const nextQuestion = () => {\n    if (quizState.currentQuestionIndex < quizState.questions.length - 1) {\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestionIndex: prev.currentQuestionIndex + 1,\n        timeLeft: 30\n      }));\n    } else {\n      finishQuiz();\n    }\n  };\n  const previousQuestion = () => {\n    if (quizState.currentQuestionIndex > 0) {\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestionIndex: prev.currentQuestionIndex - 1,\n        timeLeft: 30\n      }));\n    }\n  };\n  const finishQuiz = () => {\n    const score = quizState.selectedAnswers.reduce((total, answer, index) => {\n      var _quizState$questions$;\n      if (answer === ((_quizState$questions$ = quizState.questions[index]) === null || _quizState$questions$ === void 0 ? void 0 : _quizState$questions$.correctAnswer)) {\n        return total + 1;\n      }\n      return total;\n    }, 0);\n    const percentage = Math.round(score / quizState.questions.length * 100);\n    const newHighScore = {\n      score,\n      total: quizState.questions.length,\n      percentage,\n      difficulty: quizState.difficulty,\n      date: new Date().toLocaleDateString()\n    };\n    saveHighScore(newHighScore);\n    setHighScores(getHighScores());\n    setQuizState(prev => ({\n      ...prev,\n      isComplete: true,\n      score\n    }));\n  };\n  const restartQuiz = () => {\n    setQuizState(prev => ({\n      ...prev,\n      questions: [],\n      currentQuestionIndex: 0,\n      selectedAnswers: [],\n      isComplete: false,\n      score: 0,\n      isLoading: true,\n      error: null,\n      timeLeft: 30\n    }));\n    loadQuestions();\n  };\n\n  // After clicking on setting it will show\n  if (showSettings) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), \"Quiz Settings\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-2 block\",\n                children: \"Difficulty Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: quizState.difficulty,\n                onValueChange: value => setQuizState(prev => ({\n                  ...prev,\n                  difficulty: value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"mixed\",\n                  children: \"Mixed Difficulty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"easy\",\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"hard\",\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium\",\n                  children: \"Timer (30 seconds per question)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-600\",\n                  children: \"Auto-advance when time runs out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: quizState.timerEnabled ? \"default\" : \"outline\",\n                size: \"sm\",\n                onClick: () => setQuizState(prev => ({\n                  ...prev,\n                  timerEnabled: !prev.timerEnabled\n                })),\n                children: quizState.timerEnabled ? \"Enabled\" : \"Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), highScores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 37\n              }, this), \"High Scores\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 max-h-48 overflow-y-auto\",\n              children: highScores.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center p-2 bg-gray-50 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: [score.score, \"/\", score.total]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-600 ml-2\",\n                    children: [\"(\", score.percentage, \"%) - \", score.difficulty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500\",\n                  children: score.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(false),\n              className: \"flex-1\",\n              children: \"Start Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: () => setShowSettings(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this);\n  }\n\n  // During loading \n  if (quizState.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"flex flex-col items-center justify-center p-8\",\n          children: [/*#__PURE__*/_jsxDEV(LoaderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-center mt-4\",\n            children: \"Loading quiz questions from API...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-2 text-center\",\n            children: [\"Difficulty: \", quizState.difficulty === \"mixed\" ? \"Mixed\" : quizState.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Error view \n  if (quizState.error) {\n    const isOfflineMode = quizState.error.includes(\"offline questions\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-background via-muted/30 to-background flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"flex flex-col items-center justify-center p-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-6 rounded-xl mb-6 text-center border-2 ${isOfflineMode ? \"bg-secondary/10 border-secondary/30\" : \"bg-destructive/10 border-destructive/30\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${isOfflineMode ? \"text-secondary\" : \"text-destructive\"} font-bold mb-3 text-lg`,\n              children: isOfflineMode ? \"⚠️ Offline Mode\" : \"❌ Connection Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${isOfflineMode ? \"text-secondary/80\" : \"text-destructive/80\"} text-sm`,\n              children: quizState.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: loadQuestions,\n              variant: \"outline\",\n              children: isOfflineMode ? \"🔄 Retry Online\" : \"🔄 Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(true),\n              variant: \"outline\",\n              children: \"\\u2699\\uFE0F Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Results view\n  if (quizState.isComplete) {\n    const percentage = Math.round(quizState.score / quizState.questions.length * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-400 via-indigo-500 to-blue-500\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-2xl bg-white/80 backdrop-blur-md border border-white/20 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(FaTrophy, {\n              className: \"w-14 h-18 text-yellow-400 animate-bounce\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-3xl font-bold text-gray-800\",\n            children: \"Quiz Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"secondary\",\n            className: \"mx-auto bg-gradient-to-r from-purple-500 to-indigo-500 text-white px-3 py-1 rounded-full\",\n            children: [quizState.difficulty, \" difficulty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-5xl font-extrabold text-indigo-600 mb-2 animate-pulse\",\n              children: [quizState.score, \"/\", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 text-lg\",\n              children: [\"You scored \", percentage, \"% on this quiz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-xl text-gray-800\",\n              children: \"Review Your Answers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this), quizState.questions.map((question, index) => {\n              const userAnswer = quizState.selectedAnswers[index];\n              const isCorrect = userAnswer === question.correctAnswer;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `border-2 p-4 rounded-lg transition-all duration-200 ${isCorrect ? \"border-green-400 bg-green-50\" : \"border-red-400 bg-red-50\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"font-medium flex-1 text-gray-800\",\n                    children: [index + 1, \". \", question.question]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 45\n                  }, this), question.difficulty && /*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"outline\",\n                    className: \"ml-2 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\",\n                    children: question.difficulty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1 text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: isCorrect ? \"text-green-600 font-medium\" : \"text-red-600 font-medium\",\n                    children: [\"Your answer: \", userAnswer !== null ? question.options[userAnswer] : \"No answer\", \" \", isCorrect ? \" ✓\" : \" ✗\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 45\n                  }, this), !isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-green-700 font-medium\",\n                    children: [\"Correct answer: \", question.options[question.correctAnswer]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 41\n                }, this)]\n              }, question.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4 justify-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: restartQuiz,\n              className: \"flex items-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(RotateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this), \" Take Quiz Again\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(true),\n              variant: \"outline\",\n              className: \"px-6 py-2 rounded-lg border border-indigo-600 text-indigo-600 hover:bg-indigo-50\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Quiz view\n  const currentQuestion = quizState.questions[quizState.currentQuestionIndex];\n  const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex];\n  const progress = (quizState.currentQuestionIndex + 1) / quizState.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-400 via-indigo-500 to-blue-500\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl bg-white/80 backdrop-blur-md shadow-xl border border-white/20\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-xl font-bold text-gray-800\",\n            children: \"Quiz App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [quizState.timerEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center gap-1 text-sm font-semibold ${quizState.timeLeft <= 10 ? \"text-red-600 animate-pulse\" : \"text-gray-700\"}`,\n              children: [/*#__PURE__*/_jsxDEV(ClockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 37\n              }, this), \" \", quizState.timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-700\",\n              children: [\"Question \", quizState.currentQuestionIndex + 1, \" of \", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"ghost\",\n              size: \"sm\",\n              onClick: () => setShowSettings(true),\n              children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 101\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          value: progress,\n          className: \"w-full bg-gray-200 rounded-full h-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800\",\n          children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-3\",\n          children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedAnswer === index ? \"default\" : \"outline\",\n            className: `text-left h-auto p-4 rounded-lg transition-all duration-200 ${selectedAnswer === index ? \"bg-gradient-to-r from-indigo-500 to-purple-500 text-white\" : \"bg-white hover:bg-indigo-50 border border-gray-300\"}`,\n            onClick: () => selectAnswer(index),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium mr-3\",\n              children: [String.fromCharCode(65 + index), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 33\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: previousQuestion,\n            disabled: quizState.currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: nextQuestion,\n            disabled: selectedAnswer === null,\n            children: quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizApp, \"yeZGVBlv0WmyOPrAw9vuRkWv1P8=\");\n_c = QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["useState","useEffect","LoaderIcon","RotateIcon","TrophyIcon","ClockIcon","StarIcon","SettingsIcon","Card","CardHeader","CardContent","CardTitle","Button","Progress","Badge","Select","SelectItem","FaTrophy","jsxDEV","_jsxDEV","fetchTriviaQuestions","amount","difficulty","url","response","fetch","method","headers","Accept","ok","Error","status","data","json","results","length","map","item","index","question","decodeURIComponent","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","ans","allAnswers","shuffledAnswers","sort","Math","random","correctIndex","indexOf","id","Date","now","options","category","decodeError","console","error","getHighScores","window","scores","localStorage","getItem","JSON","parse","saveHighScore","score","push","a","b","percentage","topScores","slice","setItem","stringify","QuizApp","onBack","_s","quizState","setQuizState","questions","currentQuestionIndex","selectedAnswers","isComplete","isLoading","timeLeft","timerEnabled","showSettings","setShowSettings","highScores","setHighScores","interval","setInterval","prev","reduce","total","answer","_prev$questions$index","clearInterval","loadQuestions","undefined","Array","fill","selectAnswer","answerIndex","newSelectedAnswers","nextQuestion","finishQuiz","previousQuestion","_quizState$questions$","round","newHighScore","date","toLocaleDateString","restartQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onValueChange","variant","size","onClick","isOfflineMode","includes","userAnswer","isCorrect","currentQuestion","selectedAnswer","progress","option","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["D:/quizzassignment/src/components/QuizApp.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { LoaderIcon, RotateIcon, TrophyIcon, ClockIcon, StarIcon, SettingsIcon } from \"./Icons\"\r\nimport { Card, CardHeader, CardContent, CardTitle, Button, Progress, Badge, Select, SelectItem } from \"./Ui-components\"\r\nimport { FaTrophy } from \"react-icons/fa6\";\r\n\r\n\r\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\r\n    try {\r\n        let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`\r\n        if (difficulty && difficulty !== \"mixed\") {\r\n            url += `&difficulty=${difficulty}`\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            },\r\n        })\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`)\r\n        }\r\n\r\n        const data = await response.json()\r\n\r\n        if (!data.results || data.results.length === 0) {\r\n            throw new Error(\"No questions received from API\")\r\n        }\r\n\r\n        return data.results.map((item, index) => {\r\n            try {\r\n                // Decode URL-encoded strings with better error handling\r\n                const question = decodeURIComponent(item.question)\r\n                const correctAnswer = decodeURIComponent(item.correct_answer)\r\n                const incorrectAnswers = item.incorrect_answers.map((ans) => decodeURIComponent(ans))\r\n\r\n                // Randomize answer positions\r\n                const allAnswers = [...incorrectAnswers, correctAnswer]\r\n                const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5)\r\n                const correctIndex = shuffledAnswers.indexOf(correctAnswer)\r\n\r\n                return {\r\n                    id: `trivia-${Date.now()}-${index}`,\r\n                    question,\r\n                    options: shuffledAnswers,\r\n                    correctAnswer: correctIndex,\r\n                    difficulty: item.difficulty,\r\n                    category: decodeURIComponent(item.category),\r\n                }\r\n            } catch (decodeError) {\r\n                console.error(\"Error decoding question:\", decodeError)\r\n                throw new Error(\"Failed to process question data\")\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.error(\"Error fetching trivia questions:\", error)\r\n        throw error\r\n    }\r\n}\r\n\r\nconst getHighScores = () => {\r\n    if (typeof window === \"undefined\") return []\r\n    const scores = localStorage.getItem(\"quiz-high-scores\")\r\n    return scores ? JSON.parse(scores) : []\r\n}\r\n\r\nconst saveHighScore = (score) => {\r\n    if (typeof window === \"undefined\") return\r\n    const scores = getHighScores()\r\n    scores.push(score)\r\n    scores.sort((a, b) => b.percentage - a.percentage)\r\n    const topScores = scores.slice(0, 10) // Keep top 10 scores\r\n    localStorage.setItem(\"quiz-high-scores\", JSON.stringify(topScores))\r\n}\r\n\r\nexport function QuizApp({ onBack }) {\r\n\r\n    const [quizState, setQuizState] = useState({\r\n        questions: [],\r\n        currentQuestionIndex: 0,\r\n        selectedAnswers: [],\r\n        isComplete: false,\r\n        score: 0,\r\n        isLoading: true,\r\n        error: null,\r\n        timeLeft: 30,\r\n        timerEnabled: false,\r\n        difficulty: \"mixed\",\r\n    })\r\n\r\n    const [showSettings, setShowSettings] = useState(false)\r\n    const [highScores, setHighScores] = useState([])\r\n\r\n\r\n    // for timer in each question\r\n    useEffect(() => {\r\n        let interval\r\n\r\n        // \r\n        if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\r\n            interval = setInterval(() => {\r\n                setQuizState((prev) => {\r\n                    // if question times is up\r\n                    if (prev.timeLeft <= 1) {\r\n                        // maybe it was not the last question\r\n                        if (prev.currentQuestionIndex < prev.questions.length - 1) {\r\n                            return {\r\n                                ...prev,\r\n                                currentQuestionIndex: prev.currentQuestionIndex + 1,\r\n                                timeLeft: 30,\r\n                            }\r\n                        } else {\r\n                            // Finish quiz bcoz it is a last question\r\n                            const score = prev.selectedAnswers.reduce((total, answer, index) => {\r\n                                if (answer === prev.questions[index]?.correctAnswer) {\r\n                                    return total + 1\r\n                                }\r\n                                return total\r\n                            }, 0)\r\n\r\n                            return {\r\n                                ...prev,\r\n                                isComplete: true,\r\n                                score,\r\n                                timeLeft: 0,\r\n                            }\r\n                        }\r\n                    }\r\n                    return { ...prev, timeLeft: prev.timeLeft - 1 }\r\n                })\r\n            }, 1000)\r\n        }\r\n\r\n        return () => clearInterval(interval)\r\n    }, [\r\n        quizState.timerEnabled,\r\n        quizState.timeLeft,\r\n        quizState.isComplete,\r\n        quizState.isLoading,\r\n        quizState.currentQuestionIndex,\r\n    ])\r\n\r\n    useEffect(() => {\r\n        setHighScores(getHighScores())\r\n    }, [])\r\n\r\n    // Load questions on component mount\r\n    useEffect(() => {\r\n        if (!showSettings) {\r\n            loadQuestions()\r\n        }\r\n    }, [showSettings, quizState.difficulty])\r\n\r\n    const loadQuestions = async () => {\r\n        setQuizState((prev) => ({ ...prev, isLoading: true, error: null }))\r\n\r\n        try {\r\n            // Always try API first with enhanced error handling\r\n            const questions = await fetchTriviaQuestions(\r\n                8, // Load 8 questions as requested (5-10 range)\r\n                quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty,\r\n            )\r\n\r\n            if (questions.length === 0) {\r\n                throw new Error(\"No questions received\")\r\n            }\r\n\r\n            setQuizState((prev) => ({\r\n                ...prev,\r\n                questions,\r\n                selectedAnswers: new Array(questions.length).fill(null),\r\n                isLoading: false,\r\n                currentQuestionIndex: 0,\r\n                timeLeft: 30,\r\n                isComplete: false,\r\n                score: 0,\r\n            }))\r\n        } catch (error) {\r\n            console.error(\"Failed to load questions from API:\", error)\r\n\r\n            // Enhanced fallback with user notification\r\n\r\n        }\r\n    }\r\n\r\n    const selectAnswer = (answerIndex) => {\r\n        if (quizState.isComplete) return\r\n\r\n        const newSelectedAnswers = [...quizState.selectedAnswers]\r\n        newSelectedAnswers[quizState.currentQuestionIndex] = answerIndex\r\n\r\n        setQuizState((prev) => ({\r\n            ...prev,\r\n            selectedAnswers: newSelectedAnswers,\r\n        }))\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if (quizState.currentQuestionIndex < quizState.questions.length - 1) {\r\n            setQuizState((prev) => ({\r\n                ...prev,\r\n                currentQuestionIndex: prev.currentQuestionIndex + 1,\r\n                timeLeft: 30,\r\n            }))\r\n        } else {\r\n            finishQuiz()\r\n        }\r\n    }\r\n\r\n    const previousQuestion = () => {\r\n        if (quizState.currentQuestionIndex > 0) {\r\n            setQuizState((prev) => ({\r\n                ...prev,\r\n                currentQuestionIndex: prev.currentQuestionIndex - 1,\r\n                timeLeft: 30,\r\n            }))\r\n        }\r\n    }\r\n\r\n    const finishQuiz = () => {\r\n        const score = quizState.selectedAnswers.reduce((total, answer, index) => {\r\n            if (answer === quizState.questions[index]?.correctAnswer) {\r\n                return total + 1\r\n            }\r\n            return total\r\n        }, 0)\r\n\r\n        const percentage = Math.round((score / quizState.questions.length) * 100)\r\n        const newHighScore = {\r\n            score,\r\n            total: quizState.questions.length,\r\n            percentage,\r\n            difficulty: quizState.difficulty,\r\n            date: new Date().toLocaleDateString(),\r\n        }\r\n\r\n        saveHighScore(newHighScore)\r\n        setHighScores(getHighScores())\r\n\r\n        setQuizState((prev) => ({\r\n            ...prev,\r\n            isComplete: true,\r\n            score,\r\n        }))\r\n    }\r\n\r\n    const restartQuiz = () => {\r\n        setQuizState((prev) => ({\r\n            ...prev,\r\n            questions: [],\r\n            currentQuestionIndex: 0,\r\n            selectedAnswers: [],\r\n            isComplete: false,\r\n            score: 0,\r\n            isLoading: true,\r\n            error: null,\r\n            timeLeft: 30,\r\n        }))\r\n        loadQuestions()\r\n    }\r\n\r\n    // After clicking on setting it will show\r\n    if (showSettings) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n                <Card className=\"w-full max-w-2xl\">\r\n                    <CardHeader>\r\n                        <CardTitle className=\"flex items-center gap-2\">\r\n                            <SettingsIcon />\r\n                            Quiz Settings\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-6\">\r\n                        <div className=\"space-y-4\">\r\n                            <div>\r\n                                <label className=\"text-sm font-medium mb-2 block\">Difficulty Level</label>\r\n                                <Select\r\n                                    value={quizState.difficulty}\r\n                                    onValueChange={(value) => setQuizState((prev) => ({ ...prev, difficulty: value }))}\r\n                                >\r\n                                    <SelectItem value=\"mixed\">Mixed Difficulty</SelectItem>\r\n                                    <SelectItem value=\"easy\">Easy</SelectItem>\r\n                                    <SelectItem value=\"medium\">Medium</SelectItem>\r\n                                    <SelectItem value=\"hard\">Hard</SelectItem>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <label className=\"text-sm font-medium\">Timer (30 seconds per question)</label>\r\n                                    <p className=\"text-xs text-gray-600\">Auto-advance when time runs out</p>\r\n                                </div>\r\n                                <Button\r\n                                    variant={quizState.timerEnabled ? \"default\" : \"outline\"}\r\n                                    size=\"sm\"\r\n                                    onClick={() => setQuizState((prev) => ({ ...prev, timerEnabled: !prev.timerEnabled }))}\r\n                                >\r\n                                    {quizState.timerEnabled ? \"Enabled\" : \"Disabled\"}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {highScores.length > 0 && (\r\n                            <div className=\"space-y-4\">\r\n                                <h3 className=\"font-semibold flex items-center gap-2\">\r\n                                    <StarIcon />\r\n                                    High Scores\r\n                                </h3>\r\n                                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\r\n                                    {highScores.map((score, index) => (\r\n                                        <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\r\n                                            <div>\r\n                                                <span className=\"font-medium\">\r\n                                                    {score.score}/{score.total}\r\n                                                </span>\r\n                                                <span className=\"text-sm text-gray-600 ml-2\">\r\n                                                    ({score.percentage}%) - {score.difficulty}\r\n                                                </span>\r\n                                            </div>\r\n                                            <span className=\"text-xs text-gray-500\">{score.date}</span>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"flex gap-3\">\r\n                            <Button onClick={() => setShowSettings(false)} className=\"flex-1\">\r\n                                Start Quiz\r\n                            </Button>\r\n                            <Button variant=\"outline\" onClick={() => setShowSettings(false)}>\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // During loading \r\n    if (quizState.isLoading) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center\">\r\n                <Card className=\"w-full max-w-md\">\r\n                    <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n                        <LoaderIcon />\r\n                        <p className=\"text-gray-600 text-center mt-4\">Loading quiz questions from API...</p>\r\n                        <p className=\"text-xs text-gray-500 mt-2 text-center\">\r\n                            Difficulty: {quizState.difficulty === \"mixed\" ? \"Mixed\" : quizState.difficulty}\r\n                        </p>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Error view \r\n    if (quizState.error) {\r\n        const isOfflineMode = quizState.error.includes(\"offline questions\")\r\n\r\n        return (\r\n            <div className=\"min-h-screen bg-gradient-to-br from-background via-muted/30 to-background flex items-center justify-center p-4\">\r\n                <Card className=\"w-full max-w-md\">\r\n                    <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n                        <div\r\n                            className={`p-6 rounded-xl mb-6 text-center border-2 ${isOfflineMode ? \"bg-secondary/10 border-secondary/30\" : \"bg-destructive/10 border-destructive/30\"}`}\r\n                        >\r\n                            <p className={`${isOfflineMode ? \"text-secondary\" : \"text-destructive\"} font-bold mb-3 text-lg`}>\r\n                                {isOfflineMode ? \"⚠️ Offline Mode\" : \"❌ Connection Error\"}\r\n                            </p>\r\n                            <p className={`${isOfflineMode ? \"text-secondary/80\" : \"text-destructive/80\"} text-sm`}>\r\n                                {quizState.error}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"flex gap-3\">\r\n                            <Button onClick={loadQuestions} variant=\"outline\">\r\n                                {isOfflineMode ? \"🔄 Retry Online\" : \"🔄 Try Again\"}\r\n                            </Button>\r\n                            <Button onClick={() => setShowSettings(true)} variant=\"outline\">\r\n                                ⚙️ Settings\r\n                            </Button>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // Results view\r\n    if (quizState.isComplete) {\r\n        const percentage = Math.round((quizState.score / quizState.questions.length) * 100)\r\n\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-400 via-indigo-500 to-blue-500\">\r\n                <Card className=\"w-full max-w-2xl bg-white/80 backdrop-blur-md border border-white/20 shadow-xl\">\r\n                    <CardHeader className=\"text-center\">\r\n                        <div className=\"flex justify-center mb-4\">\r\n                            <FaTrophy className=\"w-14 h-18 text-yellow-400 animate-bounce\" />\r\n                        </div>\r\n                        <CardTitle className=\"text-3xl font-bold text-gray-800\">Quiz Complete!</CardTitle>\r\n                        <Badge variant=\"secondary\" className=\"mx-auto bg-gradient-to-r from-purple-500 to-indigo-500 text-white px-3 py-1 rounded-full\">\r\n                            {quizState.difficulty} difficulty\r\n                        </Badge>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-6\">\r\n                        <div className=\"text-center\">\r\n                            <div className=\"text-5xl font-extrabold text-indigo-600 mb-2 animate-pulse\">\r\n                                {quizState.score}/{quizState.questions.length}\r\n                            </div>\r\n                            <p className=\"text-gray-700 text-lg\">You scored {percentage}% on this quiz</p>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                            <h3 className=\"font-semibold text-xl text-gray-800\">Review Your Answers:</h3>\r\n                            {quizState.questions.map((question, index) => {\r\n                                const userAnswer = quizState.selectedAnswers[index]\r\n                                const isCorrect = userAnswer === question.correctAnswer\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={question.id}\r\n                                        className={`border-2 p-4 rounded-lg transition-all duration-200 ${isCorrect ? \"border-green-400 bg-green-50\" : \"border-red-400 bg-red-50\"\r\n                                            }`}\r\n                                    >\r\n                                        <div className=\"flex justify-between items-start mb-2\">\r\n                                            <p className=\"font-medium flex-1 text-gray-800\">\r\n                                                {index + 1}. {question.question}\r\n                                            </p>\r\n                                            {question.difficulty && (\r\n                                                <Badge variant=\"outline\" className=\"ml-2 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\r\n                                                    {question.difficulty}\r\n                                                </Badge>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"space-y-1 text-sm\">\r\n                                            <p className={isCorrect ? \"text-green-600 font-medium\" : \"text-red-600 font-medium\"}>\r\n                                                Your answer: {userAnswer !== null ? question.options[userAnswer] : \"No answer\"} {isCorrect ? \" ✓\" : \" ✗\"}\r\n                                            </p>\r\n                                            {!isCorrect && (\r\n                                                <p className=\"text-green-700 font-medium\">\r\n                                                    Correct answer: {question.options[question.correctAnswer]}\r\n                                                </p>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-4 justify-center mt-4\">\r\n                            <Button onClick={restartQuiz} className=\"flex items-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg\">\r\n                                <RotateIcon /> Take Quiz Again\r\n                            </Button>\r\n                            <Button onClick={() => setShowSettings(true)} variant=\"outline\" className=\"px-6 py-2 rounded-lg border border-indigo-600 text-indigo-600 hover:bg-indigo-50\">\r\n                                Settings\r\n                            </Button>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Quiz view\r\n    const currentQuestion = quizState.questions[quizState.currentQuestionIndex]\r\n    const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex]\r\n    const progress = ((quizState.currentQuestionIndex + 1) / quizState.questions.length) * 100\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-400 via-indigo-500 to-blue-500\">\r\n            <Card className=\"w-full max-w-2xl bg-white/80 backdrop-blur-md shadow-xl border border-white/20\">\r\n                <CardHeader>\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                        <CardTitle className=\"text-xl font-bold text-gray-800\">Quiz App</CardTitle>\r\n                        <div className=\"flex items-center gap-3\">\r\n                            {quizState.timerEnabled && (\r\n                                <div className={`flex items-center gap-1 text-sm font-semibold ${quizState.timeLeft <= 10 ? \"text-red-600 animate-pulse\" : \"text-gray-700\"}`}>\r\n                                    <ClockIcon /> {quizState.timeLeft}s\r\n                                </div>\r\n                            )}\r\n                            <span className=\"text-sm text-gray-700\">Question {quizState.currentQuestionIndex + 1} of {quizState.questions.length}</span>\r\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowSettings(true)}><SettingsIcon /></Button>\r\n                        </div>\r\n                    </div>\r\n                    <Progress value={progress} className=\"w-full bg-gray-200 rounded-full h-2\" />\r\n                </CardHeader>\r\n\r\n                <CardContent className=\"space-y-6\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-800\">{currentQuestion?.question}</h2>\r\n                    <div className=\"grid gap-3\">\r\n                        {currentQuestion?.options.map((option, index) => (\r\n                            <Button\r\n                                key={index}\r\n                                variant={selectedAnswer === index ? \"default\" : \"outline\"}\r\n                                className={`text-left h-auto p-4 rounded-lg transition-all duration-200 ${selectedAnswer === index ? \"bg-gradient-to-r from-indigo-500 to-purple-500 text-white\" : \"bg-white hover:bg-indigo-50 border border-gray-300\"}`}\r\n                                onClick={() => selectAnswer(index)}\r\n                            >\r\n                                <span className=\"font-medium mr-3\">{String.fromCharCode(65 + index)}.</span>\r\n                                {option}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between\">\r\n                        <Button variant=\"outline\" onClick={previousQuestion} disabled={quizState.currentQuestionIndex === 0}>Previous</Button>\r\n                        <Button onClick={nextQuestion} disabled={selectedAnswer === null}>{quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"}</Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}