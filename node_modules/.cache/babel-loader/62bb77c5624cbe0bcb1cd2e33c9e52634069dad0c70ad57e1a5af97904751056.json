{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\quizzassignment\\\\src\\\\components\\\\QuizApp.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { LoaderIcon, RotateIcon, TrophyIcon, ClockIcon, StarIcon, SettingsIcon } from \"./Icons\";\nimport { Card, CardHeader, CardContent, CardTitle, Button, Progress, Badge, Select, SelectItem } from \"./Ui-components\";\n\n// API fetch\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\n  try {\n    let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`;\n    if (difficulty && difficulty !== \"mixed\") url += `&difficulty=${difficulty}`;\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    const data = await response.json();\n    if (!data.results || data.results.length === 0) throw new Error(\"No questions received from API\");\n    return data.results.map((item, index) => {\n      const question = decodeURIComponent(item.question);\n      const correctAnswer = decodeURIComponent(item.correct_answer);\n      const incorrectAnswers = item.incorrect_answers.map(ans => decodeURIComponent(ans));\n      const allAnswers = [...incorrectAnswers, correctAnswer].sort(() => Math.random() - 0.5);\n      const correctIndex = allAnswers.indexOf(correctAnswer);\n      return {\n        id: `trivia-${Date.now()}-${index}`,\n        question,\n        options: allAnswers,\n        correctAnswer: correctIndex,\n        difficulty: item.difficulty,\n        category: decodeURIComponent(item.category)\n      };\n    });\n  } catch (error) {\n    console.error(\"Error fetching trivia questions:\", error);\n    throw error;\n  }\n}\n\n// LocalStorage high scores\nconst getHighScores = () => typeof window === \"undefined\" ? [] : JSON.parse(localStorage.getItem(\"quiz-high-scores\") || \"[]\");\nconst saveHighScore = score => {\n  if (typeof window === \"undefined\") return;\n  const scores = getHighScores();\n  scores.push(score);\n  scores.sort((a, b) => b.percentage - a.percentage);\n  localStorage.setItem(\"quiz-high-scores\", JSON.stringify(scores.slice(0, 10)));\n};\n\n// Main Quiz App\nexport function QuizApp({\n  onBack\n}) {\n  _s();\n  const [quizState, setQuizState] = useState({\n    questions: [],\n    currentQuestionIndex: 0,\n    selectedAnswers: [],\n    isComplete: false,\n    score: 0,\n    isLoading: true,\n    error: null,\n    timeLeft: 30,\n    timerEnabled: false,\n    difficulty: \"mixed\"\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [highScores, setHighScores] = useState([]);\n\n  // Timer\n  useEffect(() => {\n    let interval;\n    if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\n      interval = setInterval(() => {\n        setQuizState(prev => {\n          if (prev.timeLeft <= 1) {\n            if (prev.currentQuestionIndex < prev.questions.length - 1) return {\n              ...prev,\n              currentQuestionIndex: prev.currentQuestionIndex + 1,\n              timeLeft: 30\n            };\n            const score = prev.selectedAnswers.reduce((total, ans, i) => {\n              var _prev$questions$i;\n              return ans === ((_prev$questions$i = prev.questions[i]) === null || _prev$questions$i === void 0 ? void 0 : _prev$questions$i.correctAnswer) ? total + 1 : total;\n            }, 0);\n            return {\n              ...prev,\n              isComplete: true,\n              score,\n              timeLeft: 0\n            };\n          }\n          return {\n            ...prev,\n            timeLeft: prev.timeLeft - 1\n          };\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [quizState.timerEnabled, quizState.timeLeft, quizState.isComplete, quizState.isLoading, quizState.currentQuestionIndex]);\n  useEffect(() => {\n    setHighScores(getHighScores());\n  }, []);\n  useEffect(() => {\n    if (!showSettings) loadQuestions();\n  }, [showSettings, quizState.difficulty]);\n  const loadQuestions = async () => {\n    setQuizState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      const questions = await fetchTriviaQuestions(8, quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty);\n      setQuizState(prev => ({\n        ...prev,\n        questions,\n        selectedAnswers: new Array(questions.length).fill(null),\n        isLoading: false,\n        currentQuestionIndex: 0,\n        timeLeft: 30,\n        isComplete: false,\n        score: 0\n      }));\n    } catch (error) {\n      console.error(error);\n      setQuizState(prev => ({\n        ...prev,\n        error: \"Failed to load questions.\"\n      }));\n    }\n  };\n  const selectAnswer = answerIndex => {\n    if (quizState.isComplete) return;\n    const newSelected = [...quizState.selectedAnswers];\n    newSelected[quizState.currentQuestionIndex] = answerIndex;\n    setQuizState(prev => ({\n      ...prev,\n      selectedAnswers: newSelected\n    }));\n  };\n  const nextQuestion = () => {\n    if (quizState.currentQuestionIndex < quizState.questions.length - 1) setQuizState(prev => ({\n      ...prev,\n      currentQuestionIndex: prev.currentQuestionIndex + 1,\n      timeLeft: 30\n    }));else finishQuiz();\n  };\n  const previousQuestion = () => {\n    if (quizState.currentQuestionIndex > 0) setQuizState(prev => ({\n      ...prev,\n      currentQuestionIndex: prev.currentQuestionIndex - 1,\n      timeLeft: 30\n    }));\n  };\n  const finishQuiz = () => {\n    const score = quizState.selectedAnswers.reduce((total, answer, i) => {\n      var _quizState$questions$;\n      return answer === ((_quizState$questions$ = quizState.questions[i]) === null || _quizState$questions$ === void 0 ? void 0 : _quizState$questions$.correctAnswer) ? total + 1 : total;\n    }, 0);\n    const percentage = Math.round(score / quizState.questions.length * 100);\n    saveHighScore({\n      score,\n      total: quizState.questions.length,\n      percentage,\n      difficulty: quizState.difficulty,\n      date: new Date().toLocaleDateString()\n    });\n    setHighScores(getHighScores());\n    setQuizState(prev => ({\n      ...prev,\n      isComplete: true,\n      score\n    }));\n  };\n  const restartQuiz = () => {\n    setQuizState(prev => ({\n      ...prev,\n      questions: [],\n      currentQuestionIndex: 0,\n      selectedAnswers: [],\n      isComplete: false,\n      score: 0,\n      isLoading: true,\n      error: null,\n      timeLeft: 30\n    }));\n    loadQuestions();\n  };\n\n  // ðŸ’Ž Settings Page\n  if (showSettings) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-500 via-indigo-500 to-blue-500\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl backdrop-blur-md bg-white/30 border border-white/20 shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center gap-2 text-white text-2xl\",\n          children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 88\n          }, this), \" Quiz Settings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-6 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-semibold mb-2 block\",\n              children: \"Difficulty Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: quizState.difficulty,\n              onValueChange: v => setQuizState(prev => ({\n                ...prev,\n                difficulty: v\n              })),\n              children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n                value: \"mixed\",\n                children: \"Mixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                value: \"easy\",\n                children: \"Easy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                value: \"medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                value: \"hard\",\n                children: \"Hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-semibold\",\n                children: \"Timer (30s per question)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-white/80\",\n                children: \"Auto-advance when time runs out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: quizState.timerEnabled ? \"default\" : \"outline\",\n              size: \"sm\",\n              onClick: () => setQuizState(prev => ({\n                ...prev,\n                timerEnabled: !prev.timerEnabled\n              })),\n              children: quizState.timerEnabled ? \"Enabled\" : \"Disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), highScores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold flex items-center gap-2 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 94\n            }, this), \" High Scores\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 max-h-48 overflow-y-auto\",\n            children: highScores.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-2 bg-white/20 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: [s.score, \"/\", s.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-white/80 ml-2\",\n                  children: [\"(\", s.percentage, \"%) - \", s.difficulty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-white/60\",\n                children: s.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowSettings(false),\n            className: \"flex-1 bg-indigo-600 hover:bg-indigo-700 text-white\",\n            children: \"Start Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: () => setShowSettings(false),\n            className: \"text-white border-white/60 hover:bg-white/10\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n\n  // ðŸ’Ž Loading Page\n  if (quizState.isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-400 via-pink-400 to-yellow-300\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-md bg-white/80 backdrop-blur-md shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"flex flex-col items-center justify-center p-8 text-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(LoaderIcon, {\n          className: \"animate-spin text-indigo-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 font-medium\",\n          children: \"Loading quiz questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600 mt-2 text-center\",\n          children: [\"Difficulty: \", quizState.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n\n  // ðŸ’Ž Quiz View\n  const currentQuestion = quizState.questions[quizState.currentQuestionIndex];\n  const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex];\n  const progress = (quizState.currentQuestionIndex + 1) / quizState.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-400 via-indigo-500 to-blue-500\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl bg-white/80 backdrop-blur-md shadow-xl border border-white/20\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-xl font-bold text-gray-800\",\n            children: \"Quiz App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [quizState.timerEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center gap-1 text-sm font-semibold ${quizState.timeLeft <= 10 ? \"text-red-600 animate-pulse\" : \"text-gray-700\"}`,\n              children: [/*#__PURE__*/_jsxDEV(ClockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), \" \", quizState.timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-700\",\n              children: [\"Question \", quizState.currentQuestionIndex + 1, \" of \", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"ghost\",\n              size: \"sm\",\n              onClick: () => setShowSettings(true),\n              children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 101\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          value: progress,\n          className: \"w-full bg-gray-200 rounded-full h-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800\",\n          children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-3\",\n          children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedAnswer === index ? \"default\" : \"outline\",\n            className: `text-left h-auto p-4 rounded-lg transition-all duration-200 ${selectedAnswer === index ? \"bg-gradient-to-r from-indigo-500 to-purple-500 text-white\" : \"bg-white hover:bg-indigo-50 border border-gray-300\"}`,\n            onClick: () => selectAnswer(index),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium mr-3\",\n              children: [String.fromCharCode(65 + index), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: previousQuestion,\n            disabled: quizState.currentQuestionIndex === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: nextQuestion,\n            disabled: selectedAnswer === null,\n            children: quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizApp, \"S47HLGkDgqMwqsGwKRo2iaYH3vo=\");\n_c = QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","LoaderIcon","RotateIcon","TrophyIcon","ClockIcon","StarIcon","SettingsIcon","Card","CardHeader","CardContent","CardTitle","Button","Progress","Badge","Select","SelectItem","jsxDEV","_jsxDEV","fetchTriviaQuestions","amount","difficulty","url","response","fetch","ok","Error","status","data","json","results","length","map","item","index","question","decodeURIComponent","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","ans","allAnswers","sort","Math","random","correctIndex","indexOf","id","Date","now","options","category","error","console","getHighScores","window","JSON","parse","localStorage","getItem","saveHighScore","score","scores","push","a","b","percentage","setItem","stringify","slice","QuizApp","onBack","quizState","setQuizState","questions","currentQuestionIndex","selectedAnswers","isComplete","isLoading","timeLeft","timerEnabled","showSettings","setShowSettings","highScores","setHighScores","interval","setInterval","prev","reduce","total","i","_prev$questions$i","clearInterval","loadQuestions","undefined","Array","fill","selectAnswer","answerIndex","newSelected","nextQuestion","finishQuiz","previousQuestion","answer","_quizState$questions$","round","date","toLocaleDateString","restartQuiz","className","children","fileName","lineNumber","columnNumber","value","onValueChange","v","variant","size","onClick","s","currentQuestion","selectedAnswer","progress","option","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["D:/quizzassignment/src/components/QuizApp.jsx"],"sourcesContent":["\"use client\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { LoaderIcon, RotateIcon, TrophyIcon, ClockIcon, StarIcon, SettingsIcon } from \"./Icons\"\r\nimport { Card, CardHeader, CardContent, CardTitle, Button, Progress, Badge, Select, SelectItem } from \"./Ui-components\"\r\n\r\n// API fetch\r\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\r\n    try {\r\n        let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`\r\n        if (difficulty && difficulty !== \"mixed\") url += `&difficulty=${difficulty}`\r\n        const response = await fetch(url)\r\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`)\r\n        const data = await response.json()\r\n        if (!data.results || data.results.length === 0) throw new Error(\"No questions received from API\")\r\n        return data.results.map((item, index) => {\r\n            const question = decodeURIComponent(item.question)\r\n            const correctAnswer = decodeURIComponent(item.correct_answer)\r\n            const incorrectAnswers = item.incorrect_answers.map((ans) => decodeURIComponent(ans))\r\n            const allAnswers = [...incorrectAnswers, correctAnswer].sort(() => Math.random() - 0.5)\r\n            const correctIndex = allAnswers.indexOf(correctAnswer)\r\n            return {\r\n                id: `trivia-${Date.now()}-${index}`,\r\n                question,\r\n                options: allAnswers,\r\n                correctAnswer: correctIndex,\r\n                difficulty: item.difficulty,\r\n                category: decodeURIComponent(item.category),\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.error(\"Error fetching trivia questions:\", error)\r\n        throw error\r\n    }\r\n}\r\n\r\n// LocalStorage high scores\r\nconst getHighScores = () => typeof window === \"undefined\" ? [] : JSON.parse(localStorage.getItem(\"quiz-high-scores\") || \"[]\")\r\nconst saveHighScore = (score) => {\r\n    if (typeof window === \"undefined\") return\r\n    const scores = getHighScores()\r\n    scores.push(score)\r\n    scores.sort((a, b) => b.percentage - a.percentage)\r\n    localStorage.setItem(\"quiz-high-scores\", JSON.stringify(scores.slice(0, 10)))\r\n}\r\n\r\n// Main Quiz App\r\nexport function QuizApp({ onBack }) {\r\n    const [quizState, setQuizState] = useState({\r\n        questions: [], currentQuestionIndex: 0, selectedAnswers: [], isComplete: false,\r\n        score: 0, isLoading: true, error: null, timeLeft: 30, timerEnabled: false, difficulty: \"mixed\",\r\n    })\r\n    const [showSettings, setShowSettings] = useState(false)\r\n    const [highScores, setHighScores] = useState([])\r\n\r\n    // Timer\r\n    useEffect(() => {\r\n        let interval\r\n        if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\r\n            interval = setInterval(() => {\r\n                setQuizState(prev => {\r\n                    if (prev.timeLeft <= 1) {\r\n                        if (prev.currentQuestionIndex < prev.questions.length - 1) return { ...prev, currentQuestionIndex: prev.currentQuestionIndex + 1, timeLeft: 30 }\r\n                        const score = prev.selectedAnswers.reduce((total, ans, i) => ans === prev.questions[i]?.correctAnswer ? total + 1 : total, 0)\r\n                        return { ...prev, isComplete: true, score, timeLeft: 0 }\r\n                    }\r\n                    return { ...prev, timeLeft: prev.timeLeft - 1 }\r\n                })\r\n            }, 1000)\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [quizState.timerEnabled, quizState.timeLeft, quizState.isComplete, quizState.isLoading, quizState.currentQuestionIndex])\r\n\r\n    useEffect(() => { setHighScores(getHighScores()) }, [])\r\n    useEffect(() => { if (!showSettings) loadQuestions() }, [showSettings, quizState.difficulty])\r\n\r\n    const loadQuestions = async () => {\r\n        setQuizState(prev => ({ ...prev, isLoading: true, error: null }))\r\n        try {\r\n            const questions = await fetchTriviaQuestions(8, quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty)\r\n            setQuizState(prev => ({\r\n                ...prev, questions, selectedAnswers: new Array(questions.length).fill(null),\r\n                isLoading: false, currentQuestionIndex: 0, timeLeft: 30, isComplete: false, score: 0,\r\n            }))\r\n        } catch (error) { console.error(error); setQuizState(prev => ({ ...prev, error: \"Failed to load questions.\" })) }\r\n    }\r\n\r\n    const selectAnswer = (answerIndex) => {\r\n        if (quizState.isComplete) return\r\n        const newSelected = [...quizState.selectedAnswers]\r\n        newSelected[quizState.currentQuestionIndex] = answerIndex\r\n        setQuizState(prev => ({ ...prev, selectedAnswers: newSelected }))\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if (quizState.currentQuestionIndex < quizState.questions.length - 1) setQuizState(prev => ({ ...prev, currentQuestionIndex: prev.currentQuestionIndex + 1, timeLeft: 30 }))\r\n        else finishQuiz()\r\n    }\r\n    const previousQuestion = () => { if (quizState.currentQuestionIndex > 0) setQuizState(prev => ({ ...prev, currentQuestionIndex: prev.currentQuestionIndex - 1, timeLeft: 30 })) }\r\n\r\n    const finishQuiz = () => {\r\n        const score = quizState.selectedAnswers.reduce((total, answer, i) => answer === quizState.questions[i]?.correctAnswer ? total + 1 : total, 0)\r\n        const percentage = Math.round((score / quizState.questions.length) * 100)\r\n        saveHighScore({ score, total: quizState.questions.length, percentage, difficulty: quizState.difficulty, date: new Date().toLocaleDateString() })\r\n        setHighScores(getHighScores())\r\n        setQuizState(prev => ({ ...prev, isComplete: true, score }))\r\n    }\r\n\r\n    const restartQuiz = () => {\r\n        setQuizState(prev => ({ ...prev, questions: [], currentQuestionIndex: 0, selectedAnswers: [], isComplete: false, score: 0, isLoading: true, error: null, timeLeft: 30 }))\r\n        loadQuestions()\r\n    }\r\n\r\n    // ðŸ’Ž Settings Page\r\n    if (showSettings) return (\r\n        <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-500 via-indigo-500 to-blue-500\">\r\n            <Card className=\"w-full max-w-2xl backdrop-blur-md bg-white/30 border border-white/20 shadow-lg\">\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-white text-2xl\"><SettingsIcon /> Quiz Settings</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6 text-white\">\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"text-sm font-semibold mb-2 block\">Difficulty Level</label>\r\n                            <Select value={quizState.difficulty} onValueChange={v => setQuizState(prev => ({ ...prev, difficulty: v }))}>\r\n                                <SelectItem value=\"mixed\">Mixed</SelectItem>\r\n                                <SelectItem value=\"easy\">Easy</SelectItem>\r\n                                <SelectItem value=\"medium\">Medium</SelectItem>\r\n                                <SelectItem value=\"hard\">Hard</SelectItem>\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div>\r\n                                <label className=\"text-sm font-semibold\">Timer (30s per question)</label>\r\n                                <p className=\"text-xs text-white/80\">Auto-advance when time runs out</p>\r\n                            </div>\r\n                            <Button variant={quizState.timerEnabled ? \"default\" : \"outline\"} size=\"sm\" onClick={() => setQuizState(prev => ({ ...prev, timerEnabled: !prev.timerEnabled }))}>\r\n                                {quizState.timerEnabled ? \"Enabled\" : \"Disabled\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    {highScores.length > 0 && (\r\n                        <div className=\"space-y-4\">\r\n                            <h3 className=\"font-semibold flex items-center gap-2 text-white\"><StarIcon /> High Scores</h3>\r\n                            <div className=\"space-y-2 max-h-48 overflow-y-auto\">\r\n                                {highScores.map((s,i) => (\r\n                                    <div key={i} className=\"flex justify-between items-center p-2 bg-white/20 rounded\">\r\n                                        <div>\r\n                                            <span className=\"font-medium\">{s.score}/{s.total}</span>\r\n                                            <span className=\"text-sm text-white/80 ml-2\">({s.percentage}%) - {s.difficulty}</span>\r\n                                        </div>\r\n                                        <span className=\"text-xs text-white/60\">{s.date}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"flex gap-3\">\r\n                        <Button onClick={() => setShowSettings(false)} className=\"flex-1 bg-indigo-600 hover:bg-indigo-700 text-white\">Start Quiz</Button>\r\n                        <Button variant=\"outline\" onClick={() => setShowSettings(false)} className=\"text-white border-white/60 hover:bg-white/10\">Cancel</Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n    // ðŸ’Ž Loading Page\r\n    if (quizState.isLoading) return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-400 via-pink-400 to-yellow-300\">\r\n            <Card className=\"w-full max-w-md bg-white/80 backdrop-blur-md shadow-lg\">\r\n                <CardContent className=\"flex flex-col items-center justify-center p-8 text-gray-800\">\r\n                    <LoaderIcon className=\"animate-spin text-indigo-600\" />\r\n                    <p className=\"mt-4 font-medium\">Loading quiz questions...</p>\r\n                    <p className=\"text-xs text-gray-600 mt-2 text-center\">Difficulty: {quizState.difficulty}</p>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n    // ðŸ’Ž Quiz View\r\n    const currentQuestion = quizState.questions[quizState.currentQuestionIndex]\r\n    const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex]\r\n    const progress = ((quizState.currentQuestionIndex + 1) / quizState.questions.length) * 100\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-purple-400 via-indigo-500 to-blue-500\">\r\n            <Card className=\"w-full max-w-2xl bg-white/80 backdrop-blur-md shadow-xl border border-white/20\">\r\n                <CardHeader>\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                        <CardTitle className=\"text-xl font-bold text-gray-800\">Quiz App</CardTitle>\r\n                        <div className=\"flex items-center gap-3\">\r\n                            {quizState.timerEnabled && (\r\n                                <div className={`flex items-center gap-1 text-sm font-semibold ${quizState.timeLeft <= 10 ? \"text-red-600 animate-pulse\" : \"text-gray-700\"}`}>\r\n                                    <ClockIcon /> {quizState.timeLeft}s\r\n                                </div>\r\n                            )}\r\n                            <span className=\"text-sm text-gray-700\">Question {quizState.currentQuestionIndex + 1} of {quizState.questions.length}</span>\r\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowSettings(true)}><SettingsIcon /></Button>\r\n                        </div>\r\n                    </div>\r\n                    <Progress value={progress} className=\"w-full bg-gray-200 rounded-full h-2\" />\r\n                </CardHeader>\r\n\r\n                <CardContent className=\"space-y-6\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-800\">{currentQuestion?.question}</h2>\r\n                    <div className=\"grid gap-3\">\r\n                        {currentQuestion?.options.map((option, index) => (\r\n                            <Button\r\n                                key={index}\r\n                                variant={selectedAnswer === index ? \"default\" : \"outline\"}\r\n                                className={`text-left h-auto p-4 rounded-lg transition-all duration-200 ${selectedAnswer === index ? \"bg-gradient-to-r from-indigo-500 to-purple-500 text-white\" : \"bg-white hover:bg-indigo-50 border border-gray-300\"}`}\r\n                                onClick={() => selectAnswer(index)}\r\n                            >\r\n                                <span className=\"font-medium mr-3\">{String.fromCharCode(65 + index)}.</span>\r\n                                {option}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between\">\r\n                        <Button variant=\"outline\" onClick={previousQuestion} disabled={quizState.currentQuestionIndex === 0}>Previous</Button>\r\n                        <Button onClick={nextQuestion} disabled={selectedAnswer === null}>{quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"}</Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}