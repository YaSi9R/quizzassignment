{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\quizzassignment\\\\src\\\\components\\\\QuizApp.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { LoaderIcon, RotateIcon, TrophyIcon, ClockIcon, StarIcon, SettingsIcon } from \"./Icons\";\nimport { Card, CardHeader, CardContent, CardTitle, Button, Progress, Badge, Select, SelectItem } from \"./Ui-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\n  try {\n    let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`;\n    if (difficulty && difficulty !== \"mixed\") {\n      url += `&difficulty=${difficulty}`;\n    }\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n\n    // Handle different API response codes\n    switch (data.response_code) {\n      case 0:\n        // Success\n        break;\n      case 1:\n        throw new Error(\"No results found. Try a different difficulty level.\");\n      case 2:\n        throw new Error(\"Invalid parameter in API request.\");\n      case 3:\n        throw new Error(\"Token not found.\");\n      case 4:\n        throw new Error(\"Token empty.\");\n      default:\n        throw new Error(\"Unknown API error occurred.\");\n    }\n    if (!data.results || data.results.length === 0) {\n      throw new Error(\"No questions received from API\");\n    }\n    return data.results.map((item, index) => {\n      try {\n        // Decode URL-encoded strings with better error handling\n        const question = decodeURIComponent(item.question);\n        const correctAnswer = decodeURIComponent(item.correct_answer);\n        const incorrectAnswers = item.incorrect_answers.map(ans => decodeURIComponent(ans));\n\n        // Randomize answer positions\n        const allAnswers = [...incorrectAnswers, correctAnswer];\n        const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5);\n        const correctIndex = shuffledAnswers.indexOf(correctAnswer);\n        return {\n          id: `trivia-${Date.now()}-${index}`,\n          question,\n          options: shuffledAnswers,\n          correctAnswer: correctIndex,\n          difficulty: item.difficulty,\n          category: decodeURIComponent(item.category)\n        };\n      } catch (decodeError) {\n        console.error(\"Error decoding question:\", decodeError);\n        throw new Error(\"Failed to process question data\");\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching trivia questions:\", error);\n    throw error;\n  }\n}\nconst getHighScores = () => {\n  if (typeof window === \"undefined\") return [];\n  const scores = localStorage.getItem(\"quiz-high-scores\");\n  return scores ? JSON.parse(scores) : [];\n};\nconst saveHighScore = score => {\n  if (typeof window === \"undefined\") return;\n  const scores = getHighScores();\n  scores.push(score);\n  scores.sort((a, b) => b.percentage - a.percentage);\n  const topScores = scores.slice(0, 10); // Keep top 10 scores\n  localStorage.setItem(\"quiz-high-scores\", JSON.stringify(topScores));\n};\nexport function QuizApp({\n  onBack\n}) {\n  _s();\n  const [quizState, setQuizState] = useState({\n    questions: [],\n    currentQuestionIndex: 0,\n    selectedAnswers: [],\n    isComplete: false,\n    score: 0,\n    isLoading: true,\n    error: null,\n    timeLeft: 30,\n    timerEnabled: false,\n    difficulty: \"mixed\"\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [highScores, setHighScores] = useState([]);\n  useEffect(() => {\n    let interval;\n    if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\n      interval = setInterval(() => {\n        setQuizState(prev => {\n          if (prev.timeLeft <= 1) {\n            // Auto-advance when timer runs out\n            if (prev.currentQuestionIndex < prev.questions.length - 1) {\n              return {\n                ...prev,\n                currentQuestionIndex: prev.currentQuestionIndex + 1,\n                timeLeft: 30\n              };\n            } else {\n              // Finish quiz if on last question\n              const score = prev.selectedAnswers.reduce((total, answer, index) => {\n                var _prev$questions$index;\n                if (answer === ((_prev$questions$index = prev.questions[index]) === null || _prev$questions$index === void 0 ? void 0 : _prev$questions$index.correctAnswer)) {\n                  return total + 1;\n                }\n                return total;\n              }, 0);\n              return {\n                ...prev,\n                isComplete: true,\n                score,\n                timeLeft: 0\n              };\n            }\n          }\n          return {\n            ...prev,\n            timeLeft: prev.timeLeft - 1\n          };\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [quizState.timerEnabled, quizState.timeLeft, quizState.isComplete, quizState.isLoading, quizState.currentQuestionIndex]);\n  useEffect(() => {\n    setHighScores(getHighScores());\n  }, []);\n\n  // Load questions on component mount\n  useEffect(() => {\n    if (!showSettings) {\n      loadQuestions();\n    }\n  }, [showSettings, quizState.difficulty]);\n  const loadQuestions = async () => {\n    setQuizState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      // Always try API first with enhanced error handling\n      const questions = await fetchTriviaQuestions(8,\n      // Load 8 questions as requested (5-10 range)\n      quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty);\n      if (questions.length === 0) {\n        throw new Error(\"No questions received\");\n      }\n      setQuizState(prev => ({\n        ...prev,\n        questions,\n        selectedAnswers: new Array(questions.length).fill(null),\n        isLoading: false,\n        currentQuestionIndex: 0,\n        timeLeft: 30,\n        isComplete: false,\n        score: 0\n      }));\n    } catch (error) {\n      console.error(\"Failed to load questions from API:\", error);\n\n      // Enhanced fallback with user notification\n    }\n  };\n  const selectAnswer = answerIndex => {\n    if (quizState.isComplete) return;\n    const newSelectedAnswers = [...quizState.selectedAnswers];\n    newSelectedAnswers[quizState.currentQuestionIndex] = answerIndex;\n    setQuizState(prev => ({\n      ...prev,\n      selectedAnswers: newSelectedAnswers\n    }));\n  };\n  const nextQuestion = () => {\n    if (quizState.currentQuestionIndex < quizState.questions.length - 1) {\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestionIndex: prev.currentQuestionIndex + 1,\n        timeLeft: 30\n      }));\n    } else {\n      finishQuiz();\n    }\n  };\n  const previousQuestion = () => {\n    if (quizState.currentQuestionIndex > 0) {\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestionIndex: prev.currentQuestionIndex - 1,\n        timeLeft: 30\n      }));\n    }\n  };\n  const finishQuiz = () => {\n    const score = quizState.selectedAnswers.reduce((total, answer, index) => {\n      var _quizState$questions$;\n      if (answer === ((_quizState$questions$ = quizState.questions[index]) === null || _quizState$questions$ === void 0 ? void 0 : _quizState$questions$.correctAnswer)) {\n        return total + 1;\n      }\n      return total;\n    }, 0);\n    const percentage = Math.round(score / quizState.questions.length * 100);\n    const newHighScore = {\n      score,\n      total: quizState.questions.length,\n      percentage,\n      difficulty: quizState.difficulty,\n      date: new Date().toLocaleDateString()\n    };\n    saveHighScore(newHighScore);\n    setHighScores(getHighScores());\n    setQuizState(prev => ({\n      ...prev,\n      isComplete: true,\n      score\n    }));\n  };\n  const restartQuiz = () => {\n    setQuizState(prev => ({\n      ...prev,\n      questions: [],\n      currentQuestionIndex: 0,\n      selectedAnswers: [],\n      isComplete: false,\n      score: 0,\n      isLoading: true,\n      error: null,\n      timeLeft: 30\n    }));\n    loadQuestions();\n  };\n  if (showSettings) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), \"Quiz Settings\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-2 block\",\n                children: \"Difficulty Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: quizState.difficulty,\n                onValueChange: value => setQuizState(prev => ({\n                  ...prev,\n                  difficulty: value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"mixed\",\n                  children: \"Mixed Difficulty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"easy\",\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"hard\",\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium\",\n                  children: \"Timer (30 seconds per question)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-600\",\n                  children: \"Auto-advance when time runs out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: quizState.timerEnabled ? \"default\" : \"outline\",\n                size: \"sm\",\n                onClick: () => setQuizState(prev => ({\n                  ...prev,\n                  timerEnabled: !prev.timerEnabled\n                })),\n                children: quizState.timerEnabled ? \"Enabled\" : \"Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), highScores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), \"High Scores\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 max-h-48 overflow-y-auto\",\n              children: highScores.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center p-2 bg-gray-50 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: [score.score, \"/\", score.total]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-600 ml-2\",\n                    children: [\"(\", score.percentage, \"%) - \", score.difficulty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500\",\n                  children: score.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(false),\n              className: \"flex-1\",\n              children: \"Start Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: () => setShowSettings(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n  if (quizState.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"flex flex-col items-center justify-center p-8\",\n          children: [/*#__PURE__*/_jsxDEV(LoaderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-center mt-4\",\n            children: \"Loading quiz questions from Open Trivia DB...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-2 text-center\",\n            children: [\"Difficulty: \", quizState.difficulty === \"mixed\" ? \"Mixed\" : quizState.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this);\n  }\n  if (quizState.error) {\n    const isOfflineMode = quizState.error.includes(\"offline questions\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"flex flex-col items-center justify-center p-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 rounded-lg mb-4 text-center ${isOfflineMode ? \"bg-yellow-50 border border-yellow-200\" : \"bg-red-50 border border-red-200\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${isOfflineMode ? \"text-yellow-800\" : \"text-red-800\"} font-medium mb-2`,\n              children: isOfflineMode ? \"⚠️ Offline Mode\" : \"❌ Connection Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${isOfflineMode ? \"text-yellow-700\" : \"text-red-700\"} text-sm`,\n              children: quizState.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: loadQuestions,\n              variant: \"outline\",\n              children: isOfflineMode ? \"Retry Online\" : \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(true),\n              variant: \"outline\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results view\n  if (quizState.isComplete) {\n    const percentage = Math.round(quizState.score / quizState.questions.length * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(TrophyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-2xl font-bold\",\n            children: \"Quiz Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"secondary\",\n            className: \"mx-auto\",\n            children: [quizState.difficulty, \" difficulty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-4xl font-bold text-blue-600 mb-2\",\n              children: [quizState.score, \"/\", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [\"You scored \", percentage, \"% on this quiz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-lg\",\n              children: \"Review Your Answers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), quizState.questions.map((question, index) => {\n              const userAnswer = quizState.selectedAnswers[index];\n              const isCorrect = userAnswer === question.correctAnswer;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"font-medium flex-1\",\n                    children: [index + 1, \". \", question.question]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 23\n                  }, this), question.difficulty && /*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"outline\",\n                    className: \"ml-2 text-xs\",\n                    children: question.difficulty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1 text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: isCorrect ? \"text-blue-600\" : \"text-red-600\",\n                    children: [\"Your answer: \", userAnswer !== null ? question.options[userAnswer] : \"No answer\", isCorrect ? \" ✓\" : \" ✗\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this), !isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-blue-600\",\n                    children: [\"Correct answer: \", question.options[question.correctAnswer]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, question.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3 justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: restartQuiz,\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(RotateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), \"Take Quiz Again\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(true),\n              variant: \"outline\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Quiz view\n  const currentQuestion = quizState.questions[quizState.currentQuestionIndex];\n  const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex];\n  const progress = (quizState.currentQuestionIndex + 1) / quizState.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-xl font-bold\",\n            children: \"Quiz App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), onBack && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            size: \"sm\",\n            onClick: onBack,\n            \"aria-label\": \"Back to home\",\n            children: \"\\u2190 Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [quizState.timerEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(ClockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: quizState.timeLeft <= 10 ? \"text-red-600 font-bold\" : \"text-gray-600\",\n                children: [quizState.timeLeft, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Question \", quizState.currentQuestionIndex + 1, \" of \", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"ghost\",\n              size: \"sm\",\n              onClick: () => setShowSettings(true),\n              \"aria-label\": \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          value: progress,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold flex-1\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.difficulty) && /*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"outline\",\n              className: \"ml-3\",\n              children: currentQuestion.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-3\",\n            children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: selectedAnswer === index ? \"default\" : \"outline\",\n              className: \"justify-start text-left h-auto p-4 text-wrap transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]\",\n              onClick: () => selectAnswer(index),\n              \"aria-label\": `Option ${String.fromCharCode(65 + index)}: ${option}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium mr-3\",\n                children: [String.fromCharCode(65 + index), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 19\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, quizState.currentQuestionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: previousQuestion,\n            disabled: quizState.currentQuestionIndex === 0,\n            \"aria-label\": \"Previous question\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: nextQuestion,\n            disabled: selectedAnswer === null,\n            className: \"flex items-center gap-2\",\n            \"aria-label\": quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish quiz\" : \"Next question\",\n            children: quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 476,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"f626H/yhjNcGLcSOxbRGGIoxUfs=\");\n_c = QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","LoaderIcon","RotateIcon","TrophyIcon","ClockIcon","StarIcon","SettingsIcon","Card","CardHeader","CardContent","CardTitle","Button","Progress","Badge","Select","SelectItem","jsxDEV","_jsxDEV","fetchTriviaQuestions","amount","difficulty","url","response","fetch","method","headers","Accept","ok","Error","status","data","json","response_code","results","length","map","item","index","question","decodeURIComponent","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","ans","allAnswers","shuffledAnswers","sort","Math","random","correctIndex","indexOf","id","Date","now","options","category","decodeError","console","error","getHighScores","window","scores","localStorage","getItem","JSON","parse","saveHighScore","score","push","a","b","percentage","topScores","slice","setItem","stringify","QuizApp","onBack","quizState","setQuizState","questions","currentQuestionIndex","selectedAnswers","isComplete","isLoading","timeLeft","timerEnabled","showSettings","setShowSettings","highScores","setHighScores","interval","setInterval","prev","reduce","total","answer","_prev$questions$index","clearInterval","loadQuestions","undefined","Array","fill","selectAnswer","answerIndex","newSelectedAnswers","nextQuestion","finishQuiz","previousQuestion","_quizState$questions$","round","newHighScore","date","toLocaleDateString","restartQuiz","className","children","fileName","lineNumber","columnNumber","value","onValueChange","variant","size","onClick","isOfflineMode","includes","userAnswer","isCorrect","currentQuestion","selectedAnswer","progress","option","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["D:/quizzassignment/src/components/QuizApp.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { LoaderIcon, RotateIcon, TrophyIcon, ClockIcon, StarIcon, SettingsIcon } from \"./Icons\"\r\nimport { Card, CardHeader, CardContent, CardTitle, Button, Progress, Badge, Select, SelectItem } from \"./Ui-components\"\r\n\r\n\r\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\r\n  try {\r\n    let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`\r\n    if (difficulty && difficulty !== \"mixed\") {\r\n      url += `&difficulty=${difficulty}`\r\n    }\r\n\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n\r\n    const data = await response.json()\r\n\r\n    // Handle different API response codes\r\n    switch (data.response_code) {\r\n      case 0:\r\n        // Success\r\n        break\r\n      case 1:\r\n        throw new Error(\"No results found. Try a different difficulty level.\")\r\n      case 2:\r\n        throw new Error(\"Invalid parameter in API request.\")\r\n      case 3:\r\n        throw new Error(\"Token not found.\")\r\n      case 4:\r\n        throw new Error(\"Token empty.\")\r\n      default:\r\n        throw new Error(\"Unknown API error occurred.\")\r\n    }\r\n\r\n    if (!data.results || data.results.length === 0) {\r\n      throw new Error(\"No questions received from API\")\r\n    }\r\n\r\n    return data.results.map((item, index) => {\r\n      try {\r\n        // Decode URL-encoded strings with better error handling\r\n        const question = decodeURIComponent(item.question)\r\n        const correctAnswer = decodeURIComponent(item.correct_answer)\r\n        const incorrectAnswers = item.incorrect_answers.map((ans) => decodeURIComponent(ans))\r\n\r\n        // Randomize answer positions\r\n        const allAnswers = [...incorrectAnswers, correctAnswer]\r\n        const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5)\r\n        const correctIndex = shuffledAnswers.indexOf(correctAnswer)\r\n\r\n        return {\r\n          id: `trivia-${Date.now()}-${index}`,\r\n          question,\r\n          options: shuffledAnswers,\r\n          correctAnswer: correctIndex,\r\n          difficulty: item.difficulty,\r\n          category: decodeURIComponent(item.category),\r\n        }\r\n      } catch (decodeError) {\r\n        console.error(\"Error decoding question:\", decodeError)\r\n        throw new Error(\"Failed to process question data\")\r\n      }\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Error fetching trivia questions:\", error)\r\n    throw error\r\n  }\r\n}\r\n\r\nconst getHighScores = () => {\r\n  if (typeof window === \"undefined\") return []\r\n  const scores = localStorage.getItem(\"quiz-high-scores\")\r\n  return scores ? JSON.parse(scores) : []\r\n}\r\n\r\nconst saveHighScore = (score) => {\r\n  if (typeof window === \"undefined\") return\r\n  const scores = getHighScores()\r\n  scores.push(score)\r\n  scores.sort((a, b) => b.percentage - a.percentage)\r\n  const topScores = scores.slice(0, 10) // Keep top 10 scores\r\n  localStorage.setItem(\"quiz-high-scores\", JSON.stringify(topScores))\r\n}\r\n\r\nexport function QuizApp({onBack}) {\r\n  const [quizState, setQuizState] = useState({\r\n    questions: [],\r\n    currentQuestionIndex: 0,\r\n    selectedAnswers: [],\r\n    isComplete: false,\r\n    score: 0,\r\n    isLoading: true,\r\n    error: null,\r\n    timeLeft: 30,\r\n    timerEnabled: false,\r\n    difficulty: \"mixed\",\r\n  })\r\n\r\n  const [showSettings, setShowSettings] = useState(false)\r\n  const [highScores, setHighScores] = useState([])\r\n\r\n  useEffect(() => {\r\n    let interval\r\n\r\n    if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\r\n      interval = setInterval(() => {\r\n        setQuizState((prev) => {\r\n          if (prev.timeLeft <= 1) {\r\n            // Auto-advance when timer runs out\r\n            if (prev.currentQuestionIndex < prev.questions.length - 1) {\r\n              return {\r\n                ...prev,\r\n                currentQuestionIndex: prev.currentQuestionIndex + 1,\r\n                timeLeft: 30,\r\n              }\r\n            } else {\r\n              // Finish quiz if on last question\r\n              const score = prev.selectedAnswers.reduce((total, answer, index) => {\r\n                if (answer === prev.questions[index]?.correctAnswer) {\r\n                  return total + 1\r\n                }\r\n                return total\r\n              }, 0)\r\n\r\n              return {\r\n                ...prev,\r\n                isComplete: true,\r\n                score,\r\n                timeLeft: 0,\r\n              }\r\n            }\r\n          }\r\n          return { ...prev, timeLeft: prev.timeLeft - 1 }\r\n        })\r\n      }, 1000)\r\n    }\r\n\r\n    return () => clearInterval(interval)\r\n  }, [\r\n    quizState.timerEnabled,\r\n    quizState.timeLeft,\r\n    quizState.isComplete,\r\n    quizState.isLoading,\r\n    quizState.currentQuestionIndex,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    setHighScores(getHighScores())\r\n  }, [])\r\n\r\n  // Load questions on component mount\r\n  useEffect(() => {\r\n    if (!showSettings) {\r\n      loadQuestions()\r\n    }\r\n  }, [showSettings, quizState.difficulty])\r\n\r\n  const loadQuestions = async () => {\r\n    setQuizState((prev) => ({ ...prev, isLoading: true, error: null }))\r\n\r\n    try {\r\n      // Always try API first with enhanced error handling\r\n      const questions = await fetchTriviaQuestions(\r\n        8, // Load 8 questions as requested (5-10 range)\r\n        quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty,\r\n      )\r\n\r\n      if (questions.length === 0) {\r\n        throw new Error(\"No questions received\")\r\n      }\r\n\r\n      setQuizState((prev) => ({\r\n        ...prev,\r\n        questions,\r\n        selectedAnswers: new Array(questions.length).fill(null),\r\n        isLoading: false,\r\n        currentQuestionIndex: 0,\r\n        timeLeft: 30,\r\n        isComplete: false,\r\n        score: 0,\r\n      }))\r\n    } catch (error) {\r\n      console.error(\"Failed to load questions from API:\", error)\r\n\r\n      // Enhanced fallback with user notification\r\n     \r\n    }\r\n  }\r\n\r\n  const selectAnswer = (answerIndex) => {\r\n    if (quizState.isComplete) return\r\n\r\n    const newSelectedAnswers = [...quizState.selectedAnswers]\r\n    newSelectedAnswers[quizState.currentQuestionIndex] = answerIndex\r\n\r\n    setQuizState((prev) => ({\r\n      ...prev,\r\n      selectedAnswers: newSelectedAnswers,\r\n    }))\r\n  }\r\n\r\n  const nextQuestion = () => {\r\n    if (quizState.currentQuestionIndex < quizState.questions.length - 1) {\r\n      setQuizState((prev) => ({\r\n        ...prev,\r\n        currentQuestionIndex: prev.currentQuestionIndex + 1,\r\n        timeLeft: 30, \r\n      }))\r\n    } else {\r\n      finishQuiz()\r\n    }\r\n  }\r\n\r\n  const previousQuestion = () => {\r\n    if (quizState.currentQuestionIndex > 0) {\r\n      setQuizState((prev) => ({\r\n        ...prev,\r\n        currentQuestionIndex: prev.currentQuestionIndex - 1,\r\n        timeLeft: 30, \r\n      }))\r\n    }\r\n  }\r\n\r\n  const finishQuiz = () => {\r\n    const score = quizState.selectedAnswers.reduce((total, answer, index) => {\r\n      if (answer === quizState.questions[index]?.correctAnswer) {\r\n        return total + 1\r\n      }\r\n      return total\r\n    }, 0)\r\n\r\n    const percentage = Math.round((score / quizState.questions.length) * 100)\r\n    const newHighScore = {\r\n      score,\r\n      total: quizState.questions.length,\r\n      percentage,\r\n      difficulty: quizState.difficulty,\r\n      date: new Date().toLocaleDateString(),\r\n    }\r\n\r\n    saveHighScore(newHighScore)\r\n    setHighScores(getHighScores())\r\n\r\n    setQuizState((prev) => ({\r\n      ...prev,\r\n      isComplete: true,\r\n      score,\r\n    }))\r\n  }\r\n\r\n  const restartQuiz = () => {\r\n    setQuizState((prev) => ({\r\n      ...prev,\r\n      questions: [],\r\n      currentQuestionIndex: 0,\r\n      selectedAnswers: [],\r\n      isComplete: false,\r\n      score: 0,\r\n      isLoading: true,\r\n      error: null,\r\n      timeLeft: 30,\r\n    }))\r\n    loadQuestions()\r\n  }\r\n\r\n  if (showSettings) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-2xl\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <SettingsIcon />\r\n              Quiz Settings\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"text-sm font-medium mb-2 block\">Difficulty Level</label>\r\n                <Select\r\n                  value={quizState.difficulty}\r\n                  onValueChange={(value) => setQuizState((prev) => ({ ...prev, difficulty: value }))}\r\n                >\r\n                  <SelectItem value=\"mixed\">Mixed Difficulty</SelectItem>\r\n                  <SelectItem value=\"easy\">Easy</SelectItem>\r\n                  <SelectItem value=\"medium\">Medium</SelectItem>\r\n                  <SelectItem value=\"hard\">Hard</SelectItem>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Timer (30 seconds per question)</label>\r\n                  <p className=\"text-xs text-gray-600\">Auto-advance when time runs out</p>\r\n                </div>\r\n                <Button\r\n                  variant={quizState.timerEnabled ? \"default\" : \"outline\"}\r\n                  size=\"sm\"\r\n                  onClick={() => setQuizState((prev) => ({ ...prev, timerEnabled: !prev.timerEnabled }))}\r\n                >\r\n                  {quizState.timerEnabled ? \"Enabled\" : \"Disabled\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {highScores.length > 0 && (\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"font-semibold flex items-center gap-2\">\r\n                  <StarIcon />\r\n                  High Scores\r\n                </h3>\r\n                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\r\n                  {highScores.map((score, index) => (\r\n                    <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\r\n                      <div>\r\n                        <span className=\"font-medium\">\r\n                          {score.score}/{score.total}\r\n                        </span>\r\n                        <span className=\"text-sm text-gray-600 ml-2\">\r\n                          ({score.percentage}%) - {score.difficulty}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-xs text-gray-500\">{score.date}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex gap-3\">\r\n              <Button onClick={() => setShowSettings(false)} className=\"flex-1\">\r\n                Start Quiz\r\n              </Button>\r\n              <Button variant=\"outline\" onClick={() => setShowSettings(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (quizState.isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n            <LoaderIcon />\r\n            <p className=\"text-gray-600 text-center mt-4\">Loading quiz questions from Open Trivia DB...</p>\r\n            <p className=\"text-xs text-gray-500 mt-2 text-center\">\r\n              Difficulty: {quizState.difficulty === \"mixed\" ? \"Mixed\" : quizState.difficulty}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (quizState.error) {\r\n    const isOfflineMode = quizState.error.includes(\"offline questions\")\r\n\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n            <div\r\n              className={`p-4 rounded-lg mb-4 text-center ${isOfflineMode ? \"bg-yellow-50 border border-yellow-200\" : \"bg-red-50 border border-red-200\"}`}\r\n            >\r\n              <p className={`${isOfflineMode ? \"text-yellow-800\" : \"text-red-800\"} font-medium mb-2`}>\r\n                {isOfflineMode ? \"⚠️ Offline Mode\" : \"❌ Connection Error\"}\r\n              </p>\r\n              <p className={`${isOfflineMode ? \"text-yellow-700\" : \"text-red-700\"} text-sm`}>{quizState.error}</p>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Button onClick={loadQuestions} variant=\"outline\">\r\n                {isOfflineMode ? \"Retry Online\" : \"Try Again\"}\r\n              </Button>\r\n              <Button onClick={() => setShowSettings(true)} variant=\"outline\">\r\n                Settings\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Results view\r\n  if (quizState.isComplete) {\r\n    const percentage = Math.round((quizState.score / quizState.questions.length) * 100)\r\n\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-2xl\">\r\n          <CardHeader className=\"text-center\">\r\n            <div className=\"flex justify-center mb-4\">\r\n              <TrophyIcon />\r\n            </div>\r\n            <CardTitle className=\"text-2xl font-bold\">Quiz Complete!</CardTitle>\r\n            <Badge variant=\"secondary\" className=\"mx-auto\">\r\n              {quizState.difficulty} difficulty\r\n            </Badge>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-4xl font-bold text-blue-600 mb-2\">\r\n                {quizState.score}/{quizState.questions.length}\r\n              </div>\r\n              <p className=\"text-gray-600\">You scored {percentage}% on this quiz</p>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"font-semibold text-lg\">Review Your Answers:</h3>\r\n              {quizState.questions.map((question, index) => {\r\n                const userAnswer = quizState.selectedAnswers[index]\r\n                const isCorrect = userAnswer === question.correctAnswer\r\n\r\n                return (\r\n                  <div key={question.id} className=\"border rounded-lg p-4\">\r\n                    <div className=\"flex justify-between items-start mb-2\">\r\n                      <p className=\"font-medium flex-1\">\r\n                        {index + 1}. {question.question}\r\n                      </p>\r\n                      {question.difficulty && (\r\n                        <Badge variant=\"outline\" className=\"ml-2 text-xs\">\r\n                          {question.difficulty}\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"space-y-1 text-sm\">\r\n                      <p className={isCorrect ? \"text-blue-600\" : \"text-red-600\"}>\r\n                        Your answer: {userAnswer !== null ? question.options[userAnswer] : \"No answer\"}\r\n                        {isCorrect ? \" ✓\" : \" ✗\"}\r\n                      </p>\r\n                      {!isCorrect && (\r\n                        <p className=\"text-blue-600\">Correct answer: {question.options[question.correctAnswer]}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"flex gap-3 justify-center\">\r\n              <Button onClick={restartQuiz} className=\"flex items-center gap-2\">\r\n                <RotateIcon />\r\n                Take Quiz Again\r\n              </Button>\r\n              <Button onClick={() => setShowSettings(true)} variant=\"outline\">\r\n                Settings\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Quiz view\r\n  const currentQuestion = quizState.questions[quizState.currentQuestionIndex]\r\n  const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex]\r\n  const progress = ((quizState.currentQuestionIndex + 1) / quizState.questions.length) * 100\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n      <Card className=\"w-full max-w-2xl\">\r\n        <CardHeader>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <CardTitle className=\"text-xl font-bold\">Quiz App</CardTitle>\r\n             {onBack && (\r\n                <Button variant=\"ghost\" size=\"sm\" onClick={onBack} aria-label=\"Back to home\">\r\n                  ← Home\r\n                </Button>\r\n              )}\r\n            <div className=\"flex items-center gap-3\">\r\n              {quizState.timerEnabled && (\r\n                <div className=\"flex items-center gap-1 text-sm\">\r\n                  <ClockIcon />\r\n                  <span className={quizState.timeLeft <= 10 ? \"text-red-600 font-bold\" : \"text-gray-600\"}>\r\n                    {quizState.timeLeft}s\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <span className=\"text-sm text-gray-600\">\r\n                Question {quizState.currentQuestionIndex + 1} of {quizState.questions.length}\r\n              </span>\r\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowSettings(true)} aria-label=\"Open settings\">\r\n                <SettingsIcon />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Progress value={progress} className=\"w-full\" />\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-6\">\r\n          <div key={quizState.currentQuestionIndex}>\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <h2 className=\"text-lg font-semibold flex-1\">{currentQuestion?.question}</h2>\r\n              {currentQuestion?.difficulty && (\r\n                <Badge variant=\"outline\" className=\"ml-3\">\r\n                  {currentQuestion.difficulty}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid gap-3\">\r\n              {currentQuestion?.options.map((option, index) => (\r\n                <Button\r\n                  key={index}\r\n                  variant={selectedAnswer === index ? \"default\" : \"outline\"}\r\n                  className=\"justify-start text-left h-auto p-4 text-wrap transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]\"\r\n                  onClick={() => selectAnswer(index)}\r\n                  aria-label={`Option ${String.fromCharCode(65 + index)}: ${option}`}\r\n                >\r\n                  <span className=\"font-medium mr-3\">{String.fromCharCode(65 + index)}.</span>\r\n                  {option}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={previousQuestion}\r\n              disabled={quizState.currentQuestionIndex === 0}\r\n              aria-label=\"Previous question\"\r\n            >\r\n              Previous\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={nextQuestion}\r\n              disabled={selectedAnswer === null}\r\n              className=\"flex items-center gap-2\"\r\n              aria-label={\r\n                quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish quiz\" : \"Next question\"\r\n              }\r\n            >\r\n              {quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}