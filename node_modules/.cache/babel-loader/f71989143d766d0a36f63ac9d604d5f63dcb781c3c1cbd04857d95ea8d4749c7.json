{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\quizzassignment\\\\src\\\\components\\\\QuizApp.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  children,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `bg-white rounded-lg border border-gray-200 shadow-sm ${className}`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Card;\nconst CardHeader = ({\n  children,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `p-6 pb-4 ${className}`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 54\n}, this);\n_c2 = CardHeader;\nconst CardContent = ({\n  children,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `p-6 pt-0 ${className}`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 55\n}, this);\n_c3 = CardContent;\nconst CardTitle = ({\n  children,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"h3\", {\n  className: `text-lg font-semibold leading-none tracking-tight ${className}`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c4 = CardTitle;\nconst Button = ({\n  children,\n  onClick,\n  disabled = false,\n  variant = \"default\",\n  size = \"default\",\n  className = \"\",\n  ...props\n}) => {\n  const baseClasses = \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none\";\n  const variants = {\n    default: \"bg-blue-600 text-white hover:bg-blue-700\",\n    outline: \"border border-gray-300 bg-white hover:bg-gray-50 hover:text-gray-900\",\n    ghost: \"hover:bg-gray-100 hover:text-gray-900\"\n  };\n  const sizes = {\n    default: \"h-10 py-2 px-4\",\n    sm: \"h-9 px-3 rounded-md\",\n    lg: \"h-11 px-8 rounded-md\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`,\n    onClick: onClick,\n    disabled: disabled,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Button;\nconst Progress = ({\n  value,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `w-full bg-gray-200 rounded-full h-2 ${className}`,\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n    style: {\n      width: `${value}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this);\n_c6 = Progress;\nconst Badge = ({\n  children,\n  variant = \"default\",\n  className = \"\"\n}) => {\n  const variants = {\n    default: \"bg-blue-100 text-blue-800\",\n    outline: \"border border-gray-300 text-gray-700\",\n    secondary: \"bg-gray-100 text-gray-800\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${variants[variant]} ${className}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Badge;\nconst Select = ({\n  value,\n  onValueChange,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value,\n      onChange: e => onValueChange(e.target.value),\n      className: \"w-full px-3 py-2 border border-gray-300 rounded-md bg-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c8 = Select;\nconst SelectItem = ({\n  value,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"option\", {\n  value: value,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 89,\n  columnNumber: 45\n}, this);\n_c9 = SelectItem;\nconst LoaderIcon = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 26\n}, this);\n_c0 = LoaderIcon;\nconst RotateIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"w-4 h-4\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 3\n}, this);\n_c1 = RotateIcon;\nconst TrophyIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"w-12 h-12 text-blue-600\",\n  fill: \"currentColor\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M5 9V7a1 1 0 011-1h12a1 1 0 011 1v2a3 3 0 01-3 3v1a2 2 0 01-2 2H10a2 2 0 01-2-2v-1a3 3 0 01-3-3zM3 11.5A1.5 1.5 0 004.5 10H5V9H4.5A2.5 2.5 0 002 11.5V12a2 2 0 002 2h.5V13H4.5A1.5 1.5 0 013 11.5zM19 9v1h.5A1.5 1.5 0 0121 11.5V12a1.5 1.5 0 01-1.5 1.5H19v1h.5a2 2 0 002-2v-.5A2.5 2.5 0 0019 9.5V9z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 3\n}, this);\n_c10 = TrophyIcon;\nconst ClockIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"w-4 h-4\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  viewBox: \"0 0 24 24\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n    points: \"12,6 12,12 16,14\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 111,\n  columnNumber: 3\n}, this);\n_c11 = ClockIcon;\nconst StarIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"w-4 h-4 text-blue-600\",\n  fill: \"currentColor\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 3\n}, this);\n_c12 = StarIcon;\nconst SettingsIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"w-4 h-4\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  viewBox: \"0 0 24 24\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 010 2.83 2 2 0 01-2.83 0l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-2 2 2 2 0 01-2-2v-.09A1.65 1.65 0 009 19.4a1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83 0 2 2 0 010-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 01-2-2 2 2 0 012-2h.09A1.65 1.65 0 004.6 9a1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 010-2.83 2 2 0 012.83 0l.06.06a1.65 1.65 0 001.82.33H9a1.65 1.65 0 001-1.51V3a2 2 0 012-2 2 2 0 012 2v.09a1.65 1.65 0 001 1.51 1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 0 2 2 0 010 2.83l-.06.06a1.65 1.65 0 00-.33 1.82V9a1.65 1.65 0 001.51 1H21a2 2 0 012 2 2 2 0 01-2 2h-.09a1.65 1.65 0 00-1.51 1z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 3\n}, this);\n_c13 = SettingsIcon;\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\n  try {\n    let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`;\n    if (difficulty && difficulty !== \"mixed\") {\n      url += `&difficulty=${difficulty}`;\n    }\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n\n    // Handle different API response codes\n    switch (data.response_code) {\n      case 0:\n        // Success\n        break;\n      case 1:\n        throw new Error(\"No results found. Try a different difficulty level.\");\n      case 2:\n        throw new Error(\"Invalid parameter in API request.\");\n      case 3:\n        throw new Error(\"Token not found.\");\n      case 4:\n        throw new Error(\"Token empty.\");\n      default:\n        throw new Error(\"Unknown API error occurred.\");\n    }\n    if (!data.results || data.results.length === 0) {\n      throw new Error(\"No questions received from API\");\n    }\n    return data.results.map((item, index) => {\n      try {\n        // Decode URL-encoded strings with better error handling\n        const question = decodeURIComponent(item.question);\n        const correctAnswer = decodeURIComponent(item.correct_answer);\n        const incorrectAnswers = item.incorrect_answers.map(ans => decodeURIComponent(ans));\n\n        // Randomize answer positions\n        const allAnswers = [...incorrectAnswers, correctAnswer];\n        const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5);\n        const correctIndex = shuffledAnswers.indexOf(correctAnswer);\n        return {\n          id: `trivia-${Date.now()}-${index}`,\n          question,\n          options: shuffledAnswers,\n          correctAnswer: correctIndex,\n          difficulty: item.difficulty,\n          category: decodeURIComponent(item.category)\n        };\n      } catch (decodeError) {\n        console.error(\"Error decoding question:\", decodeError);\n        throw new Error(\"Failed to process question data\");\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching trivia questions:\", error);\n    throw error;\n  }\n}\nconst getHighScores = () => {\n  if (typeof window === \"undefined\") return [];\n  const scores = localStorage.getItem(\"quiz-high-scores\");\n  return scores ? JSON.parse(scores) : [];\n};\nconst saveHighScore = score => {\n  if (typeof window === \"undefined\") return;\n  const scores = getHighScores();\n  scores.push(score);\n  scores.sort((a, b) => b.percentage - a.percentage);\n  const topScores = scores.slice(0, 10); // Keep top 10 scores\n  localStorage.setItem(\"quiz-high-scores\", JSON.stringify(topScores));\n};\nexport function QuizApp() {\n  _s();\n  const [quizState, setQuizState] = useState({\n    questions: [],\n    currentQuestionIndex: 0,\n    selectedAnswers: [],\n    isComplete: false,\n    score: 0,\n    isLoading: true,\n    error: null,\n    timeLeft: 30,\n    timerEnabled: false,\n    difficulty: \"mixed\"\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [highScores, setHighScores] = useState([]);\n  useEffect(() => {\n    let interval;\n    if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\n      interval = setInterval(() => {\n        setQuizState(prev => {\n          if (prev.timeLeft <= 1) {\n            // Auto-advance when timer runs out\n            if (prev.currentQuestionIndex < prev.questions.length - 1) {\n              return {\n                ...prev,\n                currentQuestionIndex: prev.currentQuestionIndex + 1,\n                timeLeft: 30\n              };\n            } else {\n              // Finish quiz if on last question\n              const score = prev.selectedAnswers.reduce((total, answer, index) => {\n                var _prev$questions$index;\n                if (answer === ((_prev$questions$index = prev.questions[index]) === null || _prev$questions$index === void 0 ? void 0 : _prev$questions$index.correctAnswer)) {\n                  return total + 1;\n                }\n                return total;\n              }, 0);\n              return {\n                ...prev,\n                isComplete: true,\n                score,\n                timeLeft: 0\n              };\n            }\n          }\n          return {\n            ...prev,\n            timeLeft: prev.timeLeft - 1\n          };\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [quizState.timerEnabled, quizState.timeLeft, quizState.isComplete, quizState.isLoading, quizState.currentQuestionIndex]);\n  useEffect(() => {\n    setHighScores(getHighScores());\n  }, []);\n\n  // Load questions on component mount\n  useEffect(() => {\n    if (!showSettings) {\n      loadQuestions();\n    }\n  }, [showSettings, quizState.difficulty]);\n  const loadQuestions = async () => {\n    setQuizState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      // Always try API first with enhanced error handling\n      const questions = await fetchTriviaQuestions(8,\n      // Load 8 questions as requested (5-10 range)\n      quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty);\n      if (questions.length === 0) {\n        throw new Error(\"No questions received\");\n      }\n      setQuizState(prev => ({\n        ...prev,\n        questions,\n        selectedAnswers: new Array(questions.length).fill(null),\n        isLoading: false,\n        currentQuestionIndex: 0,\n        timeLeft: 30,\n        isComplete: false,\n        score: 0\n      }));\n    } catch (error) {\n      console.error(\"Failed to load questions from API:\", error);\n\n      // Enhanced fallback with user notification\n    }\n  };\n  const selectAnswer = answerIndex => {\n    if (quizState.isComplete) return;\n    const newSelectedAnswers = [...quizState.selectedAnswers];\n    newSelectedAnswers[quizState.currentQuestionIndex] = answerIndex;\n    setQuizState(prev => ({\n      ...prev,\n      selectedAnswers: newSelectedAnswers\n    }));\n  };\n  const nextQuestion = () => {\n    if (quizState.currentQuestionIndex < quizState.questions.length - 1) {\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestionIndex: prev.currentQuestionIndex + 1,\n        timeLeft: 30 // Reset timer for next question\n      }));\n    } else {\n      finishQuiz();\n    }\n  };\n  const previousQuestion = () => {\n    if (quizState.currentQuestionIndex > 0) {\n      setQuizState(prev => ({\n        ...prev,\n        currentQuestionIndex: prev.currentQuestionIndex - 1,\n        timeLeft: 30 // Reset timer when going back\n      }));\n    }\n  };\n  const finishQuiz = () => {\n    const score = quizState.selectedAnswers.reduce((total, answer, index) => {\n      var _quizState$questions$;\n      if (answer === ((_quizState$questions$ = quizState.questions[index]) === null || _quizState$questions$ === void 0 ? void 0 : _quizState$questions$.correctAnswer)) {\n        return total + 1;\n      }\n      return total;\n    }, 0);\n    const percentage = Math.round(score / quizState.questions.length * 100);\n    const newHighScore = {\n      score,\n      total: quizState.questions.length,\n      percentage,\n      difficulty: quizState.difficulty,\n      date: new Date().toLocaleDateString()\n    };\n    saveHighScore(newHighScore);\n    setHighScores(getHighScores());\n    setQuizState(prev => ({\n      ...prev,\n      isComplete: true,\n      score\n    }));\n  };\n  const restartQuiz = () => {\n    setQuizState(prev => ({\n      ...prev,\n      questions: [],\n      currentQuestionIndex: 0,\n      selectedAnswers: [],\n      isComplete: false,\n      score: 0,\n      isLoading: true,\n      error: null,\n      timeLeft: 30\n    }));\n    loadQuestions();\n  };\n  if (showSettings) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), \"Quiz Settings\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-2 block\",\n                children: \"Difficulty Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: quizState.difficulty,\n                onValueChange: value => setQuizState(prev => ({\n                  ...prev,\n                  difficulty: value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"mixed\",\n                  children: \"Mixed Difficulty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"easy\",\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: \"hard\",\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium\",\n                  children: \"Timer (30 seconds per question)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-600\",\n                  children: \"Auto-advance when time runs out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: quizState.timerEnabled ? \"default\" : \"outline\",\n                size: \"sm\",\n                onClick: () => setQuizState(prev => ({\n                  ...prev,\n                  timerEnabled: !prev.timerEnabled\n                })),\n                children: quizState.timerEnabled ? \"Enabled\" : \"Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), highScores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), \"High Scores\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 max-h-48 overflow-y-auto\",\n              children: highScores.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center p-2 bg-gray-50 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: [score.score, \"/\", score.total]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-600 ml-2\",\n                    children: [\"(\", score.percentage, \"%) - \", score.difficulty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-500\",\n                  children: score.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(false),\n              className: \"flex-1\",\n              children: \"Start Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: () => setShowSettings(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this);\n  }\n  if (quizState.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"flex flex-col items-center justify-center p-8\",\n          children: [/*#__PURE__*/_jsxDEV(LoaderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-center mt-4\",\n            children: \"Loading quiz questions from Open Trivia DB...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-2 text-center\",\n            children: [\"Difficulty: \", quizState.difficulty === \"mixed\" ? \"Mixed\" : quizState.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this);\n  }\n  if (quizState.error) {\n    const isOfflineMode = quizState.error.includes(\"offline questions\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"flex flex-col items-center justify-center p-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 rounded-lg mb-4 text-center ${isOfflineMode ? \"bg-yellow-50 border border-yellow-200\" : \"bg-red-50 border border-red-200\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${isOfflineMode ? \"text-yellow-800\" : \"text-red-800\"} font-medium mb-2`,\n              children: isOfflineMode ? \"⚠️ Offline Mode\" : \"❌ Connection Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${isOfflineMode ? \"text-yellow-700\" : \"text-red-700\"} text-sm`,\n              children: quizState.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: loadQuestions,\n              variant: \"outline\",\n              children: isOfflineMode ? \"Retry Online\" : \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(true),\n              variant: \"outline\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Results view\n  if (quizState.isComplete) {\n    const percentage = Math.round(quizState.score / quizState.questions.length * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(TrophyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-2xl font-bold\",\n            children: \"Quiz Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"secondary\",\n            className: \"mx-auto\",\n            children: [quizState.difficulty, \" difficulty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-4xl font-bold text-blue-600 mb-2\",\n              children: [quizState.score, \"/\", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [\"You scored \", percentage, \"% on this quiz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-lg\",\n              children: \"Review Your Answers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), quizState.questions.map((question, index) => {\n              const userAnswer = quizState.selectedAnswers[index];\n              const isCorrect = userAnswer === question.correctAnswer;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"font-medium flex-1\",\n                    children: [index + 1, \". \", question.question]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 23\n                  }, this), question.difficulty && /*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"outline\",\n                    className: \"ml-2 text-xs\",\n                    children: question.difficulty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1 text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: isCorrect ? \"text-blue-600\" : \"text-red-600\",\n                    children: [\"Your answer: \", userAnswer !== null ? question.options[userAnswer] : \"No answer\", isCorrect ? \" ✓\" : \" ✗\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this), !isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-blue-600\",\n                    children: [\"Correct answer: \", question.options[question.correctAnswer]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, question.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3 justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: restartQuiz,\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(RotateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this), \"Take Quiz Again\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowSettings(true),\n              variant: \"outline\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Quiz view\n  const currentQuestion = quizState.questions[quizState.currentQuestionIndex];\n  const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex];\n  const progress = (quizState.currentQuestionIndex + 1) / quizState.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-xl font-bold\",\n            children: \"Quiz App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [quizState.timerEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(ClockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: quizState.timeLeft <= 10 ? \"text-red-600 font-bold\" : \"text-gray-600\",\n                children: [quizState.timeLeft, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Question \", quizState.currentQuestionIndex + 1, \" of \", quizState.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"ghost\",\n              size: \"sm\",\n              onClick: () => setShowSettings(true),\n              \"aria-label\": \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          value: progress,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold flex-1\",\n              children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this), (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.difficulty) && /*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"outline\",\n              className: \"ml-3\",\n              children: currentQuestion.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-3\",\n            children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: selectedAnswer === index ? \"default\" : \"outline\",\n              className: \"justify-start text-left h-auto p-4 text-wrap transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]\",\n              onClick: () => selectAnswer(index),\n              \"aria-label\": `Option ${String.fromCharCode(65 + index)}: ${option}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium mr-3\",\n                children: [String.fromCharCode(65 + index), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, quizState.currentQuestionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: previousQuestion,\n            disabled: quizState.currentQuestionIndex === 0,\n            \"aria-label\": \"Previous question\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: nextQuestion,\n            disabled: selectedAnswer === null,\n            className: \"flex items-center gap-2\",\n            \"aria-label\": quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish quiz\" : \"Next question\",\n            children: quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 598,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"f626H/yhjNcGLcSOxbRGGIoxUfs=\");\n_c14 = QuizApp;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CardHeader\");\n$RefreshReg$(_c3, \"CardContent\");\n$RefreshReg$(_c4, \"CardTitle\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Progress\");\n$RefreshReg$(_c7, \"Badge\");\n$RefreshReg$(_c8, \"Select\");\n$RefreshReg$(_c9, \"SelectItem\");\n$RefreshReg$(_c0, \"LoaderIcon\");\n$RefreshReg$(_c1, \"RotateIcon\");\n$RefreshReg$(_c10, \"TrophyIcon\");\n$RefreshReg$(_c11, \"ClockIcon\");\n$RefreshReg$(_c12, \"StarIcon\");\n$RefreshReg$(_c13, \"SettingsIcon\");\n$RefreshReg$(_c14, \"QuizApp\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","Card","children","className","fileName","lineNumber","columnNumber","_c","CardHeader","_c2","CardContent","_c3","CardTitle","_c4","Button","onClick","disabled","variant","size","props","baseClasses","variants","default","outline","ghost","sizes","sm","lg","_c5","Progress","value","style","width","_c6","Badge","secondary","_c7","Select","onValueChange","onChange","e","target","_c8","SelectItem","_c9","LoaderIcon","_c0","RotateIcon","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_c1","TrophyIcon","_c10","ClockIcon","cx","cy","r","points","_c11","StarIcon","_c12","SettingsIcon","_c13","fetchTriviaQuestions","amount","difficulty","url","response","fetch","method","headers","Accept","ok","Error","status","data","json","response_code","results","length","map","item","index","question","decodeURIComponent","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","ans","allAnswers","shuffledAnswers","sort","Math","random","correctIndex","indexOf","id","Date","now","options","category","decodeError","console","error","getHighScores","window","scores","localStorage","getItem","JSON","parse","saveHighScore","score","push","a","b","percentage","topScores","slice","setItem","stringify","QuizApp","quizState","setQuizState","questions","currentQuestionIndex","selectedAnswers","isComplete","isLoading","timeLeft","timerEnabled","showSettings","setShowSettings","highScores","setHighScores","interval","setInterval","prev","reduce","total","answer","_prev$questions$index","clearInterval","loadQuestions","undefined","Array","selectAnswer","answerIndex","newSelectedAnswers","nextQuestion","finishQuiz","previousQuestion","_quizState$questions$","round","newHighScore","date","toLocaleDateString","restartQuiz","isOfflineMode","includes","userAnswer","isCorrect","currentQuestion","selectedAnswer","progress","option","String","fromCharCode","_c14","$RefreshReg$"],"sources":["D:/quizzassignment/src/components/QuizApp.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst Card = ({ children, className = \"\" }) => (\r\n  <div className={`bg-white rounded-lg border border-gray-200 shadow-sm ${className}`}>{children}</div>\r\n)\r\n\r\nconst CardHeader = ({ children, className = \"\" }) => <div className={`p-6 pb-4 ${className}`}>{children}</div>\r\n\r\nconst CardContent = ({ children, className = \"\" }) => <div className={`p-6 pt-0 ${className}`}>{children}</div>\r\n\r\nconst CardTitle = ({ children, className = \"\" }) => (\r\n  <h3 className={`text-lg font-semibold leading-none tracking-tight ${className}`}>{children}</h3>\r\n)\r\n\r\nconst Button = ({\r\n  children,\r\n  onClick,\r\n  disabled = false,\r\n  variant = \"default\",\r\n  size = \"default\",\r\n  className = \"\",\r\n  ...props\r\n}) => {\r\n  const baseClasses =\r\n    \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none\"\r\n\r\n  const variants = {\r\n    default: \"bg-blue-600 text-white hover:bg-blue-700\",\r\n    outline: \"border border-gray-300 bg-white hover:bg-gray-50 hover:text-gray-900\",\r\n    ghost: \"hover:bg-gray-100 hover:text-gray-900\",\r\n  }\r\n\r\n  const sizes = {\r\n    default: \"h-10 py-2 px-4\",\r\n    sm: \"h-9 px-3 rounded-md\",\r\n    lg: \"h-11 px-8 rounded-md\",\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={`${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nconst Progress = ({ value, className = \"\" }) => (\r\n  <div className={`w-full bg-gray-200 rounded-full h-2 ${className}`}>\r\n    <div className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\" style={{ width: `${value}%` }} />\r\n  </div>\r\n)\r\n\r\nconst Badge = ({ children, variant = \"default\", className = \"\" }) => {\r\n  const variants = {\r\n    default: \"bg-blue-100 text-blue-800\",\r\n    outline: \"border border-gray-300 text-gray-700\",\r\n    secondary: \"bg-gray-100 text-gray-800\",\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${variants[variant]} ${className}`}\r\n    >\r\n      {children}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst Select = ({ value, onValueChange, children }) => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onValueChange(e.target.value)}\r\n        className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n      >\r\n        {children}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SelectItem = ({ value, children }) => <option value={value}>{children}</option>\r\n\r\nconst LoaderIcon = () => <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n\r\nconst RotateIcon = () => (\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nconst TrophyIcon = () => (\r\n  <svg className=\"w-12 h-12 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M5 9V7a1 1 0 011-1h12a1 1 0 011 1v2a3 3 0 01-3 3v1a2 2 0 01-2 2H10a2 2 0 01-2-2v-1a3 3 0 01-3-3zM3 11.5A1.5 1.5 0 004.5 10H5V9H4.5A2.5 2.5 0 002 11.5V12a2 2 0 002 2h.5V13H4.5A1.5 1.5 0 013 11.5zM19 9v1h.5A1.5 1.5 0 0121 11.5V12a1.5 1.5 0 01-1.5 1.5H19v1h.5a2 2 0 002-2v-.5A2.5 2.5 0 0019 9.5V9z\" />\r\n  </svg>\r\n)\r\n\r\nconst ClockIcon = () => (\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n    <polyline points=\"12,6 12,12 16,14\" />\r\n  </svg>\r\n)\r\n\r\nconst StarIcon = () => (\r\n  <svg className=\"w-4 h-4 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\r\n  </svg>\r\n)\r\n\r\nconst SettingsIcon = () => (\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n    <path d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 010 2.83 2 2 0 01-2.83 0l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-2 2 2 2 0 01-2-2v-.09A1.65 1.65 0 009 19.4a1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83 0 2 2 0 010-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 01-2-2 2 2 0 012-2h.09A1.65 1.65 0 004.6 9a1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 010-2.83 2 2 0 012.83 0l.06.06a1.65 1.65 0 001.82.33H9a1.65 1.65 0 001-1.51V3a2 2 0 012-2 2 2 0 012 2v.09a1.65 1.65 0 001 1.51 1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 0 2 2 0 010 2.83l-.06.06a1.65 1.65 0 00-.33 1.82V9a1.65 1.65 0 001.51 1H21a2 2 0 012 2 2 2 0 01-2 2h-.09a1.65 1.65 0 00-1.51 1z\" />\r\n  </svg>\r\n)\r\n\r\nasync function fetchTriviaQuestions(amount = 8, difficulty) {\r\n  try {\r\n    let url = `https://opentdb.com/api.php?amount=${amount}&type=multiple&encode=url3986`\r\n    if (difficulty && difficulty !== \"mixed\") {\r\n      url += `&difficulty=${difficulty}`\r\n    }\r\n\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n\r\n    const data = await response.json()\r\n\r\n    // Handle different API response codes\r\n    switch (data.response_code) {\r\n      case 0:\r\n        // Success\r\n        break\r\n      case 1:\r\n        throw new Error(\"No results found. Try a different difficulty level.\")\r\n      case 2:\r\n        throw new Error(\"Invalid parameter in API request.\")\r\n      case 3:\r\n        throw new Error(\"Token not found.\")\r\n      case 4:\r\n        throw new Error(\"Token empty.\")\r\n      default:\r\n        throw new Error(\"Unknown API error occurred.\")\r\n    }\r\n\r\n    if (!data.results || data.results.length === 0) {\r\n      throw new Error(\"No questions received from API\")\r\n    }\r\n\r\n    return data.results.map((item, index) => {\r\n      try {\r\n        // Decode URL-encoded strings with better error handling\r\n        const question = decodeURIComponent(item.question)\r\n        const correctAnswer = decodeURIComponent(item.correct_answer)\r\n        const incorrectAnswers = item.incorrect_answers.map((ans) => decodeURIComponent(ans))\r\n\r\n        // Randomize answer positions\r\n        const allAnswers = [...incorrectAnswers, correctAnswer]\r\n        const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5)\r\n        const correctIndex = shuffledAnswers.indexOf(correctAnswer)\r\n\r\n        return {\r\n          id: `trivia-${Date.now()}-${index}`,\r\n          question,\r\n          options: shuffledAnswers,\r\n          correctAnswer: correctIndex,\r\n          difficulty: item.difficulty,\r\n          category: decodeURIComponent(item.category),\r\n        }\r\n      } catch (decodeError) {\r\n        console.error(\"Error decoding question:\", decodeError)\r\n        throw new Error(\"Failed to process question data\")\r\n      }\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Error fetching trivia questions:\", error)\r\n    throw error\r\n  }\r\n}\r\n\r\nconst getHighScores = () => {\r\n  if (typeof window === \"undefined\") return []\r\n  const scores = localStorage.getItem(\"quiz-high-scores\")\r\n  return scores ? JSON.parse(scores) : []\r\n}\r\n\r\nconst saveHighScore = (score) => {\r\n  if (typeof window === \"undefined\") return\r\n  const scores = getHighScores()\r\n  scores.push(score)\r\n  scores.sort((a, b) => b.percentage - a.percentage)\r\n  const topScores = scores.slice(0, 10) // Keep top 10 scores\r\n  localStorage.setItem(\"quiz-high-scores\", JSON.stringify(topScores))\r\n}\r\n\r\nexport function QuizApp() {\r\n  const [quizState, setQuizState] = useState({\r\n    questions: [],\r\n    currentQuestionIndex: 0,\r\n    selectedAnswers: [],\r\n    isComplete: false,\r\n    score: 0,\r\n    isLoading: true,\r\n    error: null,\r\n    timeLeft: 30,\r\n    timerEnabled: false,\r\n    difficulty: \"mixed\",\r\n  })\r\n\r\n  const [showSettings, setShowSettings] = useState(false)\r\n  const [highScores, setHighScores] = useState([])\r\n\r\n  useEffect(() => {\r\n    let interval\r\n\r\n    if (quizState.timerEnabled && quizState.timeLeft > 0 && !quizState.isComplete && !quizState.isLoading) {\r\n      interval = setInterval(() => {\r\n        setQuizState((prev) => {\r\n          if (prev.timeLeft <= 1) {\r\n            // Auto-advance when timer runs out\r\n            if (prev.currentQuestionIndex < prev.questions.length - 1) {\r\n              return {\r\n                ...prev,\r\n                currentQuestionIndex: prev.currentQuestionIndex + 1,\r\n                timeLeft: 30,\r\n              }\r\n            } else {\r\n              // Finish quiz if on last question\r\n              const score = prev.selectedAnswers.reduce((total, answer, index) => {\r\n                if (answer === prev.questions[index]?.correctAnswer) {\r\n                  return total + 1\r\n                }\r\n                return total\r\n              }, 0)\r\n\r\n              return {\r\n                ...prev,\r\n                isComplete: true,\r\n                score,\r\n                timeLeft: 0,\r\n              }\r\n            }\r\n          }\r\n          return { ...prev, timeLeft: prev.timeLeft - 1 }\r\n        })\r\n      }, 1000)\r\n    }\r\n\r\n    return () => clearInterval(interval)\r\n  }, [\r\n    quizState.timerEnabled,\r\n    quizState.timeLeft,\r\n    quizState.isComplete,\r\n    quizState.isLoading,\r\n    quizState.currentQuestionIndex,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    setHighScores(getHighScores())\r\n  }, [])\r\n\r\n  // Load questions on component mount\r\n  useEffect(() => {\r\n    if (!showSettings) {\r\n      loadQuestions()\r\n    }\r\n  }, [showSettings, quizState.difficulty])\r\n\r\n  const loadQuestions = async () => {\r\n    setQuizState((prev) => ({ ...prev, isLoading: true, error: null }))\r\n\r\n    try {\r\n      // Always try API first with enhanced error handling\r\n      const questions = await fetchTriviaQuestions(\r\n        8, // Load 8 questions as requested (5-10 range)\r\n        quizState.difficulty === \"mixed\" ? undefined : quizState.difficulty,\r\n      )\r\n\r\n      if (questions.length === 0) {\r\n        throw new Error(\"No questions received\")\r\n      }\r\n\r\n      setQuizState((prev) => ({\r\n        ...prev,\r\n        questions,\r\n        selectedAnswers: new Array(questions.length).fill(null),\r\n        isLoading: false,\r\n        currentQuestionIndex: 0,\r\n        timeLeft: 30,\r\n        isComplete: false,\r\n        score: 0,\r\n      }))\r\n    } catch (error) {\r\n      console.error(\"Failed to load questions from API:\", error)\r\n\r\n      // Enhanced fallback with user notification\r\n     \r\n    }\r\n  }\r\n\r\n  const selectAnswer = (answerIndex) => {\r\n    if (quizState.isComplete) return\r\n\r\n    const newSelectedAnswers = [...quizState.selectedAnswers]\r\n    newSelectedAnswers[quizState.currentQuestionIndex] = answerIndex\r\n\r\n    setQuizState((prev) => ({\r\n      ...prev,\r\n      selectedAnswers: newSelectedAnswers,\r\n    }))\r\n  }\r\n\r\n  const nextQuestion = () => {\r\n    if (quizState.currentQuestionIndex < quizState.questions.length - 1) {\r\n      setQuizState((prev) => ({\r\n        ...prev,\r\n        currentQuestionIndex: prev.currentQuestionIndex + 1,\r\n        timeLeft: 30, // Reset timer for next question\r\n      }))\r\n    } else {\r\n      finishQuiz()\r\n    }\r\n  }\r\n\r\n  const previousQuestion = () => {\r\n    if (quizState.currentQuestionIndex > 0) {\r\n      setQuizState((prev) => ({\r\n        ...prev,\r\n        currentQuestionIndex: prev.currentQuestionIndex - 1,\r\n        timeLeft: 30, // Reset timer when going back\r\n      }))\r\n    }\r\n  }\r\n\r\n  const finishQuiz = () => {\r\n    const score = quizState.selectedAnswers.reduce((total, answer, index) => {\r\n      if (answer === quizState.questions[index]?.correctAnswer) {\r\n        return total + 1\r\n      }\r\n      return total\r\n    }, 0)\r\n\r\n    const percentage = Math.round((score / quizState.questions.length) * 100)\r\n    const newHighScore = {\r\n      score,\r\n      total: quizState.questions.length,\r\n      percentage,\r\n      difficulty: quizState.difficulty,\r\n      date: new Date().toLocaleDateString(),\r\n    }\r\n\r\n    saveHighScore(newHighScore)\r\n    setHighScores(getHighScores())\r\n\r\n    setQuizState((prev) => ({\r\n      ...prev,\r\n      isComplete: true,\r\n      score,\r\n    }))\r\n  }\r\n\r\n  const restartQuiz = () => {\r\n    setQuizState((prev) => ({\r\n      ...prev,\r\n      questions: [],\r\n      currentQuestionIndex: 0,\r\n      selectedAnswers: [],\r\n      isComplete: false,\r\n      score: 0,\r\n      isLoading: true,\r\n      error: null,\r\n      timeLeft: 30,\r\n    }))\r\n    loadQuestions()\r\n  }\r\n\r\n  if (showSettings) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-2xl\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <SettingsIcon />\r\n              Quiz Settings\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"text-sm font-medium mb-2 block\">Difficulty Level</label>\r\n                <Select\r\n                  value={quizState.difficulty}\r\n                  onValueChange={(value) => setQuizState((prev) => ({ ...prev, difficulty: value }))}\r\n                >\r\n                  <SelectItem value=\"mixed\">Mixed Difficulty</SelectItem>\r\n                  <SelectItem value=\"easy\">Easy</SelectItem>\r\n                  <SelectItem value=\"medium\">Medium</SelectItem>\r\n                  <SelectItem value=\"hard\">Hard</SelectItem>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Timer (30 seconds per question)</label>\r\n                  <p className=\"text-xs text-gray-600\">Auto-advance when time runs out</p>\r\n                </div>\r\n                <Button\r\n                  variant={quizState.timerEnabled ? \"default\" : \"outline\"}\r\n                  size=\"sm\"\r\n                  onClick={() => setQuizState((prev) => ({ ...prev, timerEnabled: !prev.timerEnabled }))}\r\n                >\r\n                  {quizState.timerEnabled ? \"Enabled\" : \"Disabled\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {highScores.length > 0 && (\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"font-semibold flex items-center gap-2\">\r\n                  <StarIcon />\r\n                  High Scores\r\n                </h3>\r\n                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\r\n                  {highScores.map((score, index) => (\r\n                    <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\r\n                      <div>\r\n                        <span className=\"font-medium\">\r\n                          {score.score}/{score.total}\r\n                        </span>\r\n                        <span className=\"text-sm text-gray-600 ml-2\">\r\n                          ({score.percentage}%) - {score.difficulty}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-xs text-gray-500\">{score.date}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex gap-3\">\r\n              <Button onClick={() => setShowSettings(false)} className=\"flex-1\">\r\n                Start Quiz\r\n              </Button>\r\n              <Button variant=\"outline\" onClick={() => setShowSettings(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (quizState.isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n            <LoaderIcon />\r\n            <p className=\"text-gray-600 text-center mt-4\">Loading quiz questions from Open Trivia DB...</p>\r\n            <p className=\"text-xs text-gray-500 mt-2 text-center\">\r\n              Difficulty: {quizState.difficulty === \"mixed\" ? \"Mixed\" : quizState.difficulty}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (quizState.error) {\r\n    const isOfflineMode = quizState.error.includes(\"offline questions\")\r\n\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n            <div\r\n              className={`p-4 rounded-lg mb-4 text-center ${isOfflineMode ? \"bg-yellow-50 border border-yellow-200\" : \"bg-red-50 border border-red-200\"}`}\r\n            >\r\n              <p className={`${isOfflineMode ? \"text-yellow-800\" : \"text-red-800\"} font-medium mb-2`}>\r\n                {isOfflineMode ? \"⚠️ Offline Mode\" : \"❌ Connection Error\"}\r\n              </p>\r\n              <p className={`${isOfflineMode ? \"text-yellow-700\" : \"text-red-700\"} text-sm`}>{quizState.error}</p>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Button onClick={loadQuestions} variant=\"outline\">\r\n                {isOfflineMode ? \"Retry Online\" : \"Try Again\"}\r\n              </Button>\r\n              <Button onClick={() => setShowSettings(true)} variant=\"outline\">\r\n                Settings\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Results view\r\n  if (quizState.isComplete) {\r\n    const percentage = Math.round((quizState.score / quizState.questions.length) * 100)\r\n\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n        <Card className=\"w-full max-w-2xl\">\r\n          <CardHeader className=\"text-center\">\r\n            <div className=\"flex justify-center mb-4\">\r\n              <TrophyIcon />\r\n            </div>\r\n            <CardTitle className=\"text-2xl font-bold\">Quiz Complete!</CardTitle>\r\n            <Badge variant=\"secondary\" className=\"mx-auto\">\r\n              {quizState.difficulty} difficulty\r\n            </Badge>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-4xl font-bold text-blue-600 mb-2\">\r\n                {quizState.score}/{quizState.questions.length}\r\n              </div>\r\n              <p className=\"text-gray-600\">You scored {percentage}% on this quiz</p>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"font-semibold text-lg\">Review Your Answers:</h3>\r\n              {quizState.questions.map((question, index) => {\r\n                const userAnswer = quizState.selectedAnswers[index]\r\n                const isCorrect = userAnswer === question.correctAnswer\r\n\r\n                return (\r\n                  <div key={question.id} className=\"border rounded-lg p-4\">\r\n                    <div className=\"flex justify-between items-start mb-2\">\r\n                      <p className=\"font-medium flex-1\">\r\n                        {index + 1}. {question.question}\r\n                      </p>\r\n                      {question.difficulty && (\r\n                        <Badge variant=\"outline\" className=\"ml-2 text-xs\">\r\n                          {question.difficulty}\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"space-y-1 text-sm\">\r\n                      <p className={isCorrect ? \"text-blue-600\" : \"text-red-600\"}>\r\n                        Your answer: {userAnswer !== null ? question.options[userAnswer] : \"No answer\"}\r\n                        {isCorrect ? \" ✓\" : \" ✗\"}\r\n                      </p>\r\n                      {!isCorrect && (\r\n                        <p className=\"text-blue-600\">Correct answer: {question.options[question.correctAnswer]}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"flex gap-3 justify-center\">\r\n              <Button onClick={restartQuiz} className=\"flex items-center gap-2\">\r\n                <RotateIcon />\r\n                Take Quiz Again\r\n              </Button>\r\n              <Button onClick={() => setShowSettings(true)} variant=\"outline\">\r\n                Settings\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Quiz view\r\n  const currentQuestion = quizState.questions[quizState.currentQuestionIndex]\r\n  const selectedAnswer = quizState.selectedAnswers[quizState.currentQuestionIndex]\r\n  const progress = ((quizState.currentQuestionIndex + 1) / quizState.questions.length) * 100\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n      <Card className=\"w-full max-w-2xl\">\r\n        <CardHeader>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <CardTitle className=\"text-xl font-bold\">Quiz App</CardTitle>\r\n            <div className=\"flex items-center gap-3\">\r\n              {quizState.timerEnabled && (\r\n                <div className=\"flex items-center gap-1 text-sm\">\r\n                  <ClockIcon />\r\n                  <span className={quizState.timeLeft <= 10 ? \"text-red-600 font-bold\" : \"text-gray-600\"}>\r\n                    {quizState.timeLeft}s\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <span className=\"text-sm text-gray-600\">\r\n                Question {quizState.currentQuestionIndex + 1} of {quizState.questions.length}\r\n              </span>\r\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowSettings(true)} aria-label=\"Open settings\">\r\n                <SettingsIcon />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Progress value={progress} className=\"w-full\" />\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-6\">\r\n          <div key={quizState.currentQuestionIndex}>\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <h2 className=\"text-lg font-semibold flex-1\">{currentQuestion?.question}</h2>\r\n              {currentQuestion?.difficulty && (\r\n                <Badge variant=\"outline\" className=\"ml-3\">\r\n                  {currentQuestion.difficulty}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid gap-3\">\r\n              {currentQuestion?.options.map((option, index) => (\r\n                <Button\r\n                  key={index}\r\n                  variant={selectedAnswer === index ? \"default\" : \"outline\"}\r\n                  className=\"justify-start text-left h-auto p-4 text-wrap transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]\"\r\n                  onClick={() => selectAnswer(index)}\r\n                  aria-label={`Option ${String.fromCharCode(65 + index)}: ${option}`}\r\n                >\r\n                  <span className=\"font-medium mr-3\">{String.fromCharCode(65 + index)}.</span>\r\n                  {option}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={previousQuestion}\r\n              disabled={quizState.currentQuestionIndex === 0}\r\n              aria-label=\"Previous question\"\r\n            >\r\n              Previous\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={nextQuestion}\r\n              disabled={selectedAnswer === null}\r\n              className=\"flex items-center gap-2\"\r\n              aria-label={\r\n                quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish quiz\" : \"Next question\"\r\n              }\r\n            >\r\n              {quizState.currentQuestionIndex === quizState.questions.length - 1 ? \"Finish\" : \"Next\"}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}